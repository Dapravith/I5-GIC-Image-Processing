{
    "sourceFile": "ROTHA_Dapravith_e20190915_TP1.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1702538765029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1702538784968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,20 @@\n+import cv2 as cv;\n+\n+\n+img = cv.imread('./images//Test1.jpg');\n+\n+height, width = img.shape[:2]\n+\n+\n+for h in range(height) :\n+    for w in range(width) :\n+        R = img[h,w,0]\n+        G = img[h,w,1]\n+        B = img[h,w,2]\n+        \n+        #img[h,w] = R + G + B\n+        \n+        img[h,w] = 0.299*R + 0.587*G + 0.114*B\n+cv.imshow('GrayScale', img)\n+cv.waitKey(0)        \n+\n"
                },
                {
                    "date": 1702538797677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,24 +17,4 @@\n         img[h,w] = 0.299*R + 0.587*G + 0.114*B\n cv.imshow('GrayScale', img)\n cv.waitKey(0)        \n \n-import cv2 as cv;\n-\n-\n-img = cv.imread('./images//Test1.jpg');\n-\n-height, width = img.shape[:2]\n-\n-\n-for h in range(height) :\n-    for w in range(width) :\n-        R = img[h,w,0]\n-        G = img[h,w,1]\n-        B = img[h,w,2]\n-        \n-        #img[h,w] = R + G + B\n-        \n-        img[h,w] = 0.299*R + 0.587*G + 0.114*B\n-cv.imshow('GrayScale', img)\n-cv.waitKey(0)        \n-\n"
                },
                {
                    "date": 1702538918087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,21 @@\n+import cv2 as cv;\n+\n+\n+img = cv.imread('./images//Test1.jpg');\n+\n+height, width = img.shape[:2]\n+\n+\n+for h in range(height) :\n+    for w in range(width) :\n+        R = img[h,w,0]\n+        G = img[h,w,1]\n+        B = img[h,w,2]\n+        \n+        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n+        \n+        img[h,w] = 0.299*R + 0.587*G + 0.114*B\n+cv.imshow('GrayScale', img)\n+cv.waitKey(0)        \n+\n+\n"
                },
                {
                    "date": 1702538937152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import cv2 as cv;\n \n \n-img = cv.imread('./images//Test1.jpg');\n+imageFile = cv.imread('./images//Test1.jpg');\n \n height, width = img.shape[:2]\n \n \n"
                },
                {
                    "date": 1702538976185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,21 @@\n+import cv2 as cv;\n+\n+\n+imageFile = cv.imread('./images//Test1.jpg');\n+\n+height, width = imageFile.shape[:2]\n+\n+\n+for h in range(height) :\n+    for w in range(width) :\n+        R = imageFile[h,w,0]\n+        G = imageFile[h,w,1]\n+        B = imageFile[h,w,2]\n+        \n+        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n+        \n+        imageFile[h,w] = 0.299*R + 0.587*G + 0.114*B\n+cv.imshow('GrayScale', imageFile)\n+cv.waitKey(0)        \n+\n+\n"
                },
                {
                    "date": 1702551972676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,36 @@\n+import cv2 as cv\n+\n+# Function to convert an color image to grayscale\n+def convert_to_grayscale_image(FileImage):\n+    # Get the height, width value of the image\n+    height, width = FileImage.shape[:2]\n+    # Create a copy of the original image to store the grayscale version\n+    grayscale_image = FileImage.copy()\n+    # Use for loop condition each pixel in the color channel image\n+    for h in range(height):\n+        for w in range(width):\n+            R = FileImage[h][w][2]\n+            G = FileImage[h][w][1]\n+            B = FileImage[h][w][0]\n+\n+            # Apply the formula for Intensity RGB equation to Grayscale conversion Image\n+            intensity_RGB = 0.299 * R + 0.587 * G + 0.114 * B\n+\n+            # Update the pixel value in the grayscale image\n+            grayscale_image[h][w] = [intensity_RGB] * 3\n+\n+    return grayscale_image\n+\n+# Read the orignal color image\n+FileImage = cv.imread('./images/fruit1.jpg')\n+\n+# Call the function to convert the image to GrayScale\n+New_grayScale = convert_to_grayscale_image(FileImage)\n+\n+# Display the original and grayscale images\n+cv.imshow('OriginalScale Image', FileImage)\n+cv.imshow('GrayScale Image', New_grayScale)\n+\n+# Wait for the key event then close the windows of image\n+cv.waitKey(0)\n+cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702552046169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,37 @@\n+import cv2 as cv\n+\n+# Function to convert an color image to grayscale\n+def convert_to_grayscale_image(FileImage):\n+    # Get the height, width value of the image\n+    height = FileImage.shape[:2]\n+    width = FileImage.shape[:2]\n+    # Create a copy of the original image to store the grayscale version\n+    grayscale_image = FileImage.copy()\n+    # Use for loop condition each pixel in the color channel image\n+    for h in range(height):\n+        for w in range(width):\n+            R = FileImage[h][w][2]\n+            G = FileImage[h][w][1]\n+            B = FileImage[h][w][0]\n+\n+            # Apply the formula for Intensity RGB equation to Grayscale conversion Image\n+            intensity_RGB = 0.299 * R + 0.587 * G + 0.114 * B\n+\n+            # Update the pixel value in the grayscale image\n+            grayscale_image[h][w] = [intensity_RGB] * 3\n+\n+    return grayscale_image\n+\n+# Read the orignal color image\n+FileImage = cv.imread('./images/fruit1.jpg')\n+\n+# Call the function to convert the image to GrayScale\n+New_grayScale = convert_to_grayscale_image(FileImage)\n+\n+# Display the original and grayscale images\n+cv.imshow('OriginalScale Image', FileImage)\n+cv.imshow('GrayScale Image', New_grayScale)\n+\n+# Wait for the key event then close the windows of image\n+cv.waitKey(0)\n+cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702552071050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,9 @@\n \n # Function to convert an color image to grayscale\n def convert_to_grayscale_image(FileImage):\n     # Get the height, width value of the image\n-    height = FileImage.shape[:2]\n-    width = FileImage.shape[:2]\n+    height, width = FileImage.shape[:2]\n     # Create a copy of the original image to store the grayscale version\n     grayscale_image = FileImage.copy()\n     # Use for loop condition each pixel in the color channel image\n     for h in range(height):\n"
                },
                {
                    "date": 1702552227189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n # Call the function to convert the image to GrayScale\n New_grayScale = convert_to_grayscale_image(FileImage)\n \n-# Display the original and grayscale images\n+# Display both original and grayscale images\n cv.imshow('OriginalScale Image', FileImage)\n cv.imshow('GrayScale Image', New_grayScale)\n \n # Wait for the key event then close the windows of image\n"
                },
                {
                    "date": 1702552244044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,36 @@\n+import cv2 as cv\n+\n+# Function to convert an color image to grayscale\n+def convert_to_grayscale_image(FileImage):\n+    # Get the height, width value of the image\n+    height, width = FileImage.shape[:2]\n+    # Create a copy of the original image to store the grayscale version\n+    grayscale_image = FileImage.copy()\n+    # Use for loop condition each pixel in the color channel image\n+    for h in range(height):\n+        for w in range(width):\n+            R = FileImage[h][w][2]\n+            G = FileImage[h][w][1]\n+            B = FileImage[h][w][0]\n+\n+            # Apply the formula for Intensity RGB equation to Grayscale conversion Image\n+            intensity_RGB = 0.299 * R + 0.587 * G + 0.114 * B\n+\n+            # Update the pixel value in the grayscale image\n+            grayscale_image[h][w] = [intensity_RGB] * 3\n+\n+    return grayscale_image\n+\n+# Read the orignal color image file\n+FileImage = cv.imread('./images/fruit1.jpg')\n+\n+# Call the function to convert the image to GrayScale\n+New_grayScale = convert_to_grayscale_image(FileImage)\n+\n+# Display both original and grayscale images\n+cv.imshow('OriginalScale Image', FileImage)\n+cv.imshow('GrayScale Image', New_grayScale)\n+\n+# Wait for the key event then close the windows of image\n+cv.waitKey(0)\n+cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702552261284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,138 +33,4 @@\n \n # Wait for the key event then close the windows of image\n cv.waitKey(0)\n cv.destroyAllWindows()\n-import cv2 as cv\n-\n-# Function to convert an color image to grayscale\n-def convert_to_grayscale_image(FileImage):\n-    # Get the height, width value of the image\n-    height, width = FileImage.shape[:2]\n-    # Create a copy of the original image to store the grayscale version\n-    grayscale_image = FileImage.copy()\n-    # Use for loop condition each pixel in the color channel image\n-    for h in range(height):\n-        for w in range(width):\n-            R = FileImage[h][w][2]\n-            G = FileImage[h][w][1]\n-            B = FileImage[h][w][0]\n-\n-            # Apply the formula for Intensity RGB equation to Grayscale conversion Image\n-            intensity_RGB = 0.299 * R + 0.587 * G + 0.114 * B\n-\n-            # Update the pixel value in the grayscale image\n-            grayscale_image[h][w] = [intensity_RGB] * 3\n-\n-    return grayscale_image\n-\n-# Read the orignal color image\n-FileImage = cv.imread('./images/fruit1.jpg')\n-\n-# Call the function to convert the image to GrayScale\n-New_grayScale = convert_to_grayscale_image(FileImage)\n-\n-# Display both original and grayscale images\n-cv.imshow('OriginalScale Image', FileImage)\n-cv.imshow('GrayScale Image', New_grayScale)\n-\n-# Wait for the key event then close the windows of image\n-cv.waitKey(0)\n-cv.destroyAllWindows()\n-import cv2 as cv\n-\n-# Function to convert an color image to grayscale\n-def convert_to_grayscale_image(FileImage):\n-    # Get the height, width value of the image\n-    height, width = FileImage.shape[:2]\n-    # Create a copy of the original image to store the grayscale version\n-    grayscale_image = FileImage.copy()\n-    # Use for loop condition each pixel in the color channel image\n-    for h in range(height):\n-        for w in range(width):\n-            R = FileImage[h][w][2]\n-            G = FileImage[h][w][1]\n-            B = FileImage[h][w][0]\n-\n-            # Apply the formula for Intensity RGB equation to Grayscale conversion Image\n-            intensity_RGB = 0.299 * R + 0.587 * G + 0.114 * B\n-\n-            # Update the pixel value in the grayscale image\n-            grayscale_image[h][w] = [intensity_RGB] * 3\n-\n-    return grayscale_image\n-\n-# Read the orignal color image\n-FileImage = cv.imread('./images/fruit1.jpg')\n-\n-# Call the function to convert the image to GrayScale\n-New_grayScale = convert_to_grayscale_image(FileImage)\n-\n-# Display the original and grayscale images\n-cv.imshow('OriginalScale Image', FileImage)\n-cv.imshow('GrayScale Image', New_grayScale)\n-\n-# Wait for the key event then close the windows of image\n-cv.waitKey(0)\n-cv.destroyAllWindows()\n-import cv2 as cv;\n-\n-\n-imageFile = cv.imread('./images//Test1.jpg');\n-\n-height, width = imageFile.shape[:2]\n-\n-\n-for h in range(height) :\n-    for w in range(width) :\n-        R = imageFile[h,w,0]\n-        G = imageFile[h,w,1]\n-        B = imageFile[h,w,2]\n-        \n-        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n-        \n-        imageFile[h,w] = 0.299*R + 0.587*G + 0.114*B\n-cv.imshow('GrayScale', imageFile)\n-cv.waitKey(0)        \n-\n-\n-import cv2 as cv;\n-\n-\n-imageFile = cv.imread('./images//Test1.jpg');\n-\n-height, width = img.shape[:2]\n-\n-\n-for h in range(height) :\n-    for w in range(width) :\n-        R = img[h,w,0]\n-        G = img[h,w,1]\n-        B = img[h,w,2]\n-        \n-        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n-        \n-        img[h,w] = 0.299*R + 0.587*G + 0.114*B\n-cv.imshow('GrayScale', img)\n-cv.waitKey(0)        \n-\n-\n-import cv2 as cv;\n-\n-\n-img = cv.imread('./images//Test1.jpg');\n-\n-height, width = img.shape[:2]\n-\n-\n-for h in range(height) :\n-    for w in range(width) :\n-        R = img[h,w,0]\n-        G = img[h,w,1]\n-        B = img[h,w,2]\n-        \n-        #img[h,w] = R + G + B\n-        \n-        img[h,w] = 0.299*R + 0.587*G + 0.114*B\n-cv.imshow('GrayScale', img)\n-cv.waitKey(0)        \n-\n"
                }
            ],
            "date": 1702538765029,
            "name": "Commit-0",
            "content": "import cv2 as cv;\n\n\nimg = cv.imread('./images//Test1.jpg');\n\nheight, width = img.shape[:2]\n\n\nfor h in range(height) :\n    for w in range(width) :\n        R = img[h,w,0]\n        G = img[h,w,1]\n        B = img[h,w,2]\n        \n        #img[h,w] = R + G + B\n        \n        img[h,w] = 0.299*R + 0.587*G + 0.114*B\ncv.imshow('GrayScale', img)\ncv.waitKey(0)        \n\n"
        }
    ]
}