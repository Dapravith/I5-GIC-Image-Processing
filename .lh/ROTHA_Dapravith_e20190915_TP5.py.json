{
    "sourceFile": "ROTHA_Dapravith_e20190915_TP5.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 26,
            "patches": [
                {
                    "date": 1704295103812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1704344081833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,49 +0,0 @@\n-import cv2 as cv \n-import numpy as np \n-img = cv.imread(\"./images/fruit3.jpg\")\n-image = cv.imshow(\"Image\",img)\n-\n-def darkness():\n-    darkness =np.copy(img)\n-    modify_value= 100\n-    for x in range(len(img)):\n-        for y in range(len(img[x])):\n-            #Operation \n-            new_R = img[x,y,2] - modify_value \n-            new_G = img[x,y,1] - modify_value \n-            new_B = img[x,y,0] - modify_value \n-            # check condition of the intensity which is smaller than 0\n-            if new_B < 0:\n-                new_B = 0\n-            if new_G < 0:\n-                new_G=0\n-            if new_R <0:\n-                new_R=0\n-            #Add new intensity which has modified value\n-            darkness[x,y] = [new_B,new_G,new_R]\n-    cv.imshow(\"Darkness Image\",darkness)\n-    \n-def brightness():\n-    brightness= np.copy(img)\n-    modify_value= 100\n-    for x in range(len(img)):\n-        for y in range(len(img[x])):\n-            #Operation \n-            new_R = modify_value + img[x,y,2]\n-            new_G = modify_value + img[x,y,1]\n-            new_B = modify_value + img[x,y,0]\n-            # check condition of the intensity which is bigger than 255\n-            if new_B > 255:\n-                new_B = 255\n-            if new_G > 255:\n-                new_G = 255\n-            if new_R > 255:\n-                new_R = 255\n-            #Add new intensity which has modified value\n-            brightness[x,y] = [new_B,new_G,new_R]\n-    cv.imshow(\"Brightness Image\",brightness)\n-    \n-image\n-darkness()\n-brightness()\n-cv.waitKey(0)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1705544120228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,49 @@\n+import cv2 as cv \n+import numpy as np \n+img = cv.imread(\"img/fruit3.jpg\")\n+image = cv.imshow(\"Image\",img)\n+\n+def darkness():\n+    darkness =np.copy(img)\n+    modify_value= 100\n+    for x in range(len(img)):\n+        for y in range(len(img[x])):\n+            #Operation \n+            new_R = img[x,y,2] - modify_value \n+            new_G = img[x,y,1] - modify_value \n+            new_B = img[x,y,0] - modify_value \n+            # check condition of the intensity which is smaller than 0\n+            if new_B < 0:\n+                new_B = 0\n+            if new_G < 0:\n+                new_G=0\n+            if new_R <0:\n+                new_R=0\n+            #Add new intensity which has modified value\n+            darkness[x,y] = [new_B,new_G,new_R]\n+    cv.imshow(\"Darkness Image\",darkness)\n+    \n+def brightness():\n+    brightness= np.copy(img)\n+    modify_value= 100\n+    for x in range(len(img)):\n+        for y in range(len(img[x])):\n+            #Operation \n+            new_R = modify_value + img[x,y,2]\n+            new_G = modify_value + img[x,y,1]\n+            new_B = modify_value + img[x,y,0]\n+            # check condition of the intensity which is bigger than 255\n+            if new_B > 255:\n+                new_B = 255\n+            if new_G > 255:\n+                new_G = 255\n+            if new_R > 255:\n+                new_R = 255\n+            #Add new intensity which has modified value\n+            brightness[x,y] = [new_B,new_G,new_R]\n+    cv.imshow(\"Brightness Image\",brightness)\n+    \n+image\n+darkness()\n+brightness()\n+cv.waitKey(0)\n"
                },
                {
                    "date": 1705544247017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,5 +46,4 @@\n image\n darkness()\n brightness()\n cv.waitKey(0)\n-\n"
                },
                {
                    "date": 1705544276189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,49 @@\n+import cv2 as cv \n+import numpy as np \n+img = cv.imread(\"images/fruit3.jpg\")\n+image = cv.imshow(\"Image\",img)\n+\n+def darkness():\n+    darkness =np.copy(img)\n+    modify_value= 100\n+    for x in range(len(img)):\n+        for y in range(len(img[x])):\n+            #Operation \n+            new_R = img[x,y,2] - modify_value \n+            new_G = img[x,y,1] - modify_value \n+            new_B = img[x,y,0] - modify_value \n+            # check condition of the intensity which is smaller than 0\n+            if new_B < 0:\n+                new_B = 0\n+            if new_G < 0:\n+                new_G=0\n+            if new_R <0:\n+                new_R=0\n+            #Add new intensity which has modified value\n+            darkness[x,y] = [new_B,new_G,new_R]\n+    cv.imshow(\"Darkness Image\",darkness)\n+    \n+def brightness():\n+    brightness= np.copy(img)\n+    modify_value= 100\n+    for x in range(len(img)):\n+        for y in range(len(img[x])):\n+            #Operation \n+            new_R = modify_value + img[x,y,2]\n+            new_G = modify_value + img[x,y,1]\n+            new_B = modify_value + img[x,y,0]\n+            # check condition of the intensity which is bigger than 255\n+            if new_B > 255:\n+                new_B = 255\n+            if new_G > 255:\n+                new_G = 255\n+            if new_R > 255:\n+                new_R = 255\n+            #Add new intensity which has modified value\n+            brightness[x,y] = [new_B,new_G,new_R]\n+    cv.imshow(\"Brightness Image\",brightness)\n+    \n+image\n+darkness()\n+brightness()\n+cv.waitKey(0)\n"
                },
                {
                    "date": 1705544358627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n image = cv.imshow(\"Image\",img)\n \n def darkness():\n     darkness =np.copy(img)\n-    modify_value= 100\n+    modify_value= 199\n     for x in range(len(img)):\n         for y in range(len(img[x])):\n             #Operation \n             new_R = img[x,y,2] - modify_value \n@@ -46,53 +46,4 @@\n image\n darkness()\n brightness()\n cv.waitKey(0)\n-import cv2 as cv \n-import numpy as np \n-img = cv.imread(\"img/fruit3.jpg\")\n-image = cv.imshow(\"Image\",img)\n-\n-def darkness():\n-    darkness =np.copy(img)\n-    modify_value= 100\n-    for x in range(len(img)):\n-        for y in range(len(img[x])):\n-            #Operation \n-            new_R = img[x,y,2] - modify_value \n-            new_G = img[x,y,1] - modify_value \n-            new_B = img[x,y,0] - modify_value \n-            # check condition of the intensity which is smaller than 0\n-            if new_B < 0:\n-                new_B = 0\n-            if new_G < 0:\n-                new_G=0\n-            if new_R <0:\n-                new_R=0\n-            #Add new intensity which has modified value\n-            darkness[x,y] = [new_B,new_G,new_R]\n-    cv.imshow(\"Darkness Image\",darkness)\n-    \n-def brightness():\n-    brightness= np.copy(img)\n-    modify_value= 100\n-    for x in range(len(img)):\n-        for y in range(len(img[x])):\n-            #Operation \n-            new_R = modify_value + img[x,y,2]\n-            new_G = modify_value + img[x,y,1]\n-            new_B = modify_value + img[x,y,0]\n-            # check condition of the intensity which is bigger than 255\n-            if new_B > 255:\n-                new_B = 255\n-            if new_G > 255:\n-                new_G = 255\n-            if new_R > 255:\n-                new_R = 255\n-            #Add new intensity which has modified value\n-            brightness[x,y] = [new_B,new_G,new_R]\n-    cv.imshow(\"Brightness Image\",brightness)\n-    \n-image\n-darkness()\n-brightness()\n-cv.waitKey(0)\n"
                },
                {
                    "date": 1705544453556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,50 @@\n+import cv2 as cv \n+import numpy as np \n+img = cv.imread(\"images/fruit3.jpg\")\n+image = cv.imshow(\"Image\",img)\n+\n+def darkness():\n+    darkness =np.copy(img)\n+    # set modify value\n+    modify_value= 199\n+    for x in range(len(img)):\n+        for y in range(len(img[x])):\n+            #Operation \n+            new_R = img[x,y,2] - modify_value \n+            new_G = img[x,y,1] - modify_value \n+            new_B = img[x,y,0] - modify_value \n+            # check condition of the intensity which is smaller than 0\n+            if new_B < 0:\n+                new_B = 0\n+            if new_G < 0:\n+                new_G=0\n+            if new_R <0:\n+                new_R=0\n+            #Add new intensity which has modified value\n+            darkness[x,y] = [new_B,new_G,new_R]\n+    cv.imshow(\"Darkness Image\",darkness)\n+    \n+def brightness():\n+    brightness= np.copy(img)\n+    modify_value= 100\n+    for x in range(len(img)):\n+        for y in range(len(img[x])):\n+            #Operation \n+            new_R = modify_value + img[x,y,2]\n+            new_G = modify_value + img[x,y,1]\n+            new_B = modify_value + img[x,y,0]\n+            # check condition of the intensity which is bigger than 255\n+            if new_B > 255:\n+                new_B = 255\n+            if new_G > 255:\n+                new_G = 255\n+            if new_R > 255:\n+                new_R = 255\n+            #Add new intensity which has modified value\n+            brightness[x,y] = [new_B,new_G,new_R]\n+    cv.imshow(\"Brightness Image\",brightness)\n+    \n+image\n+darkness()\n+brightness()\n+cv.waitKey(0)\n"
                },
                {
                    "date": 1705544478328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n image = cv.imshow(\"Image\",img)\n \n def darkness():\n     darkness =np.copy(img)\n-    # set modify value\n+    # set modify values\n     modify_value= 199\n     for x in range(len(img)):\n         for y in range(len(img[x])):\n             #Operation \n@@ -47,53 +47,4 @@\n image\n darkness()\n brightness()\n cv.waitKey(0)\n-import cv2 as cv \n-import numpy as np \n-img = cv.imread(\"images/fruit3.jpg\")\n-image = cv.imshow(\"Image\",img)\n-\n-def darkness():\n-    darkness =np.copy(img)\n-    modify_value= 199\n-    for x in range(len(img)):\n-        for y in range(len(img[x])):\n-            #Operation \n-            new_R = img[x,y,2] - modify_value \n-            new_G = img[x,y,1] - modify_value \n-            new_B = img[x,y,0] - modify_value \n-            # check condition of the intensity which is smaller than 0\n-            if new_B < 0:\n-                new_B = 0\n-            if new_G < 0:\n-                new_G=0\n-            if new_R <0:\n-                new_R=0\n-            #Add new intensity which has modified value\n-            darkness[x,y] = [new_B,new_G,new_R]\n-    cv.imshow(\"Darkness Image\",darkness)\n-    \n-def brightness():\n-    brightness= np.copy(img)\n-    modify_value= 100\n-    for x in range(len(img)):\n-        for y in range(len(img[x])):\n-            #Operation \n-            new_R = modify_value + img[x,y,2]\n-            new_G = modify_value + img[x,y,1]\n-            new_B = modify_value + img[x,y,0]\n-            # check condition of the intensity which is bigger than 255\n-            if new_B > 255:\n-                new_B = 255\n-            if new_G > 255:\n-                new_G = 255\n-            if new_R > 255:\n-                new_R = 255\n-            #Add new intensity which has modified value\n-            brightness[x,y] = [new_B,new_G,new_R]\n-    cv.imshow(\"Brightness Image\",brightness)\n-    \n-image\n-darkness()\n-brightness()\n-cv.waitKey(0)\n"
                },
                {
                    "date": 1705544516207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,50 +1,21 @@\n-import cv2 as cv \n-import numpy as np \n+import cv2 as cv\n+import numpy as np\n+\n img = cv.imread(\"images/fruit3.jpg\")\n-image = cv.imshow(\"Image\",img)\n \n-def darkness():\n-    darkness =np.copy(img)\n-    # set modify values\n-    modify_value= 199\n-    for x in range(len(img)):\n-        for y in range(len(img[x])):\n-            #Operation \n-            new_R = img[x,y,2] - modify_value \n-            new_G = img[x,y,1] - modify_value \n-            new_B = img[x,y,0] - modify_value \n-            # check condition of the intensity which is smaller than 0\n-            if new_B < 0:\n-                new_B = 0\n-            if new_G < 0:\n-                new_G=0\n-            if new_R <0:\n-                new_R=0\n-            #Add new intensity which has modified value\n-            darkness[x,y] = [new_B,new_G,new_R]\n-    cv.imshow(\"Darkness Image\",darkness)\n-    \n-def brightness():\n-    brightness= np.copy(img)\n-    modify_value= 100\n-    for x in range(len(img)):\n-        for y in range(len(img[x])):\n-            #Operation \n-            new_R = modify_value + img[x,y,2]\n-            new_G = modify_value + img[x,y,1]\n-            new_B = modify_value + img[x,y,0]\n-            # check condition of the intensity which is bigger than 255\n-            if new_B > 255:\n-                new_B = 255\n-            if new_G > 255:\n-                new_G = 255\n-            if new_R > 255:\n-                new_R = 255\n-            #Add new intensity which has modified value\n-            brightness[x,y] = [new_B,new_G,new_R]\n-    cv.imshow(\"Brightness Image\",brightness)\n-    \n-image\n-darkness()\n-brightness()\n+def adjust_brightness_darkness(image, change):\n+    # Ensuring the values are between 0 and 255\n+    new_image = np.clip(image + change, 0, 255).astype(np.uint8)\n+    return new_image\n+\n+# Adjust brightness and darkness\n+brightness_adjusted = adjust_brightness_darkness(img, 200)  # increase by 100 for brightness\n+darkness_adjusted = adjust_brightness_darkness(img, -200)  # decrease by 100 for darkness\n+\n+# Display images\n+cv.imshow(\"Original Image\", img)\n+cv.imshow(\"Brightness Image\", brightness_adjusted)\n+cv.imshow(\"Darkness Image\", darkness_adjusted)\n+\n cv.waitKey(0)\n+cv.destroyAllWindows()\n"
                },
                {
                    "date": 1705544521580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,10 +8,10 @@\n     new_image = np.clip(image + change, 0, 255).astype(np.uint8)\n     return new_image\n \n # Adjust brightness and darkness\n-brightness_adjusted = adjust_brightness_darkness(img, 200)  # increase by 100 for brightness\n-darkness_adjusted = adjust_brightness_darkness(img, -200)  # decrease by 100 for darkness\n+brightness_adjusted = adjust_brightness_darkness(img, 200)  # increase by 200 for brightness\n+darkness_adjusted = adjust_brightness_darkness(img, -200)  # decrease by 200 for darkness\n \n # Display images\n cv.imshow(\"Original Image\", img)\n cv.imshow(\"Brightness Image\", brightness_adjusted)\n"
                },
                {
                    "date": 1705544544731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,10 +8,10 @@\n     new_image = np.clip(image + change, 0, 255).astype(np.uint8)\n     return new_image\n \n # Adjust brightness and darkness\n-brightness_adjusted = adjust_brightness_darkness(img, 200)  # increase by 200 for brightness\n-darkness_adjusted = adjust_brightness_darkness(img, -200)  # decrease by 200 for darkness\n+brightness_adjusted = adjust_brightness_darkness(img, 100)  # increase by 200 for brightness\n+darkness_adjusted = adjust_brightness_darkness(img, -100)  # decrease by 200 for darkness\n \n # Display images\n cv.imshow(\"Original Image\", img)\n cv.imshow(\"Brightness Image\", brightness_adjusted)\n"
                },
                {
                    "date": 1705544651815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,50 @@\n+import cv2 as cv \n+import numpy as np \n+img = cv.imread(\"images/fruit3.jpg\")\n+image = cv.imshow(\"Image\",img)\n+\n+def darkness():\n+    darkness =np.copy(img)\n+    # set modify values\n+    modify_value= 199\n+    for x in range(len(img)):\n+        for y in range(len(img[x])):\n+            #Operation \n+            new_R = img[x,y,2] - modify_value \n+            new_G = img[x,y,1] - modify_value \n+            new_B = img[x,y,0] - modify_value \n+            # check condition of the intensity which is smaller than 0\n+            if new_B < 0:\n+                new_B = 0\n+            if new_G < 0:\n+                new_G=0\n+            if new_R <0:\n+                new_R=0\n+            #Add new intensity which has modified value\n+            darkness[x,y] = [new_B,new_G,new_R]\n+    cv.imshow(\"Darkness Image\",darkness)\n+    \n+def brightness():\n+    brightness= np.copy(img)\n+    modify_value= 100\n+    for x in range(len(img)):\n+        for y in range(len(img[x])):\n+            #Operation \n+            new_R = modify_value + img[x,y,2]\n+            new_G = modify_value + img[x,y,1]\n+            new_B = modify_value + img[x,y,0]\n+            # check condition of the intensity which is bigger than 255\n+            if new_B > 255:\n+                new_B = 255\n+            if new_G > 255:\n+                new_G = 255\n+            if new_R > 255:\n+                new_R = 255\n+            #Add new intensity which has modified value\n+            brightness[x,y] = [new_B,new_G,new_R]\n+    cv.imshow(\"Brightness Image\",brightness)\n+    \n+image\n+darkness()\n+brightness()\n+cv.waitKey(0)\n"
                },
                {
                    "date": 1705544694972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,71 +1,26 @@\n-import cv2 as cv \n-import numpy as np \n-img = cv.imread(\"images/fruit3.jpg\")\n-image = cv.imshow(\"Image\",img)\n-\n-def darkness():\n-    darkness =np.copy(img)\n-    # set modify values\n-    modify_value= 199\n-    for x in range(len(img)):\n-        for y in range(len(img[x])):\n-            #Operation \n-            new_R = img[x,y,2] - modify_value \n-            new_G = img[x,y,1] - modify_value \n-            new_B = img[x,y,0] - modify_value \n-            # check condition of the intensity which is smaller than 0\n-            if new_B < 0:\n-                new_B = 0\n-            if new_G < 0:\n-                new_G=0\n-            if new_R <0:\n-                new_R=0\n-            #Add new intensity which has modified value\n-            darkness[x,y] = [new_B,new_G,new_R]\n-    cv.imshow(\"Darkness Image\",darkness)\n-    \n-def brightness():\n-    brightness= np.copy(img)\n-    modify_value= 100\n-    for x in range(len(img)):\n-        for y in range(len(img[x])):\n-            #Operation \n-            new_R = modify_value + img[x,y,2]\n-            new_G = modify_value + img[x,y,1]\n-            new_B = modify_value + img[x,y,0]\n-            # check condition of the intensity which is bigger than 255\n-            if new_B > 255:\n-                new_B = 255\n-            if new_G > 255:\n-                new_G = 255\n-            if new_R > 255:\n-                new_R = 255\n-            #Add new intensity which has modified value\n-            brightness[x,y] = [new_B,new_G,new_R]\n-    cv.imshow(\"Brightness Image\",brightness)\n-    \n-image\n-darkness()\n-brightness()\n-cv.waitKey(0)\n import cv2 as cv\n import numpy as np\n \n img = cv.imread(\"images/fruit3.jpg\")\n+cv.imshow(\"Original Image\", img)\n \n-def adjust_brightness_darkness(image, change):\n-    # Ensuring the values are between 0 and 255\n-    new_image = np.clip(image + change, 0, 255).astype(np.uint8)\n-    return new_image\n+def adjust_darkness(image, modify_value):\n+    # Ensure values are within [0, 255]\n+    darkness = np.maximum(image - modify_value, 0).astype(np.uint8)\n+    return darkness\n \n-# Adjust brightness and darkness\n-brightness_adjusted = adjust_brightness_darkness(img, 100)  # increase by 200 for brightness\n-darkness_adjusted = adjust_brightness_darkness(img, -100)  # decrease by 200 for darkness\n+def adjust_brightness(image, modify_value):\n+    # Ensure values are within [0, 255]\n+    brightness = np.minimum(image + modify_value, 255).astype(np.uint8)\n+    return brightness\n \n-# Display images\n-cv.imshow(\"Original Image\", img)\n-cv.imshow(\"Brightness Image\", brightness_adjusted)\n-cv.imshow(\"Darkness Image\", darkness_adjusted)\n+# Apply adjustments\n+darkness_image = adjust_darkness(img, 199)\n+brightness_image = adjust_brightness(img, 100)\n \n+# Display results\n+cv.imshow(\"Darkness Image\", darkness_image)\n+cv.imshow(\"Brightness Image\", brightness_image)\n+\n cv.waitKey(0)\n cv.destroyAllWindows()\n"
                },
                {
                    "date": 1705544716677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,26 @@\n+import cv2 as cv\n+import numpy as np\n+\n+img = cv.imread(\"images/fruit3.jpg\")\n+cv.imshow(\"Original Image\", img)\n+\n+def adjust_darkness(image, modify_value):\n+    # Ensure values are within [0, 255]\n+    darkness = np.maximum(image - modify_value, 0).astype(np.uint8)\n+    return darkness\n+\n+def adjust_brightness(image, modify_value):\n+    # Ensure values are within [0, 255]\n+    brightness = np.minimum(image + modify_value, 255).astype(np.uint8)\n+    return brightness\n+\n+# Apply adjustments\n+darkness_image = adjust_darkness(img, - 150)\n+brightness_image = adjust_brightness(img, 150)\n+\n+# Display results\n+cv.imshow(\"Darkness Image\", darkness_image)\n+cv.imshow(\"Brightness Image\", brightness_image)\n+\n+cv.waitKey(0)\n+cv.destroyAllWindows()\n"
                },
                {
                    "date": 1705544739976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,52 +1,50 @@\n-import cv2 as cv\n-import numpy as np\n-\n+import cv2 as cv \n+import numpy as np \n img = cv.imread(\"images/fruit3.jpg\")\n-cv.imshow(\"Original Image\", img)\n+image = cv.imshow(\"Image\",img)\n \n-def adjust_darkness(image, modify_value):\n-    # Ensure values are within [0, 255]\n-    darkness = np.maximum(image - modify_value, 0).astype(np.uint8)\n-    return darkness\n-\n-def adjust_brightness(image, modify_value):\n-    # Ensure values are within [0, 255]\n-    brightness = np.minimum(image + modify_value, 255).astype(np.uint8)\n-    return brightness\n-\n-# Apply adjustments\n-darkness_image = adjust_darkness(img, - 150)\n-brightness_image = adjust_brightness(img, 150)\n-\n-# Display results\n-cv.imshow(\"Darkness Image\", darkness_image)\n-cv.imshow(\"Brightness Image\", brightness_image)\n-\n+def darkness():\n+    darkness =np.copy(img)\n+    # set modify values\n+    modify_value= 199\n+    for x in range(len(img)):\n+        for y in range(len(img[x])):\n+            #Operation \n+            new_R = img[x,y,2] - modify_value \n+            new_G = img[x,y,1] - modify_value \n+            new_B = img[x,y,0] - modify_value \n+            # check condition of the intensity which is smaller than 0\n+            if new_B < 0:\n+                new_B = 0\n+            if new_G < 0:\n+                new_G=0\n+            if new_R <0:\n+                new_R=0\n+            #Add new intensity which has modified value\n+            darkness[x,y] = [new_B,new_G,new_R]\n+    cv.imshow(\"Darkness Image\",darkness)\n+    \n+def brightness():\n+    brightness= np.copy(img)\n+    modify_value= 100\n+    for x in range(len(img)):\n+        for y in range(len(img[x])):\n+            #Operation \n+            new_R = modify_value + img[x,y,2]\n+            new_G = modify_value + img[x,y,1]\n+            new_B = modify_value + img[x,y,0]\n+            # check condition of the intensity which is bigger than 255\n+            if new_B > 255:\n+                new_B = 255\n+            if new_G > 255:\n+                new_G = 255\n+            if new_R > 255:\n+                new_R = 255\n+            #Add new intensity which has modified value\n+            brightness[x,y] = [new_B,new_G,new_R]\n+    cv.imshow(\"Brightness Image\",brightness)\n+    \n+image\n+darkness()\n+brightness()\n cv.waitKey(0)\n-cv.destroyAllWindows()\n-import cv2 as cv\n-import numpy as np\n-\n-img = cv.imread(\"images/fruit3.jpg\")\n-cv.imshow(\"Original Image\", img)\n-\n-def adjust_darkness(image, modify_value):\n-    # Ensure values are within [0, 255]\n-    darkness = np.maximum(image - modify_value, 0).astype(np.uint8)\n-    return darkness\n-\n-def adjust_brightness(image, modify_value):\n-    # Ensure values are within [0, 255]\n-    brightness = np.minimum(image + modify_value, 255).astype(np.uint8)\n-    return brightness\n-\n-# Apply adjustments\n-darkness_image = adjust_darkness(img, 199)\n-brightness_image = adjust_brightness(img, 100)\n-\n-# Display results\n-cv.imshow(\"Darkness Image\", darkness_image)\n-cv.imshow(\"Brightness Image\", brightness_image)\n-\n-cv.waitKey(0)\n-cv.destroyAllWindows()\n"
                },
                {
                    "date": 1705544764030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \n def darkness():\n     darkness =np.copy(img)\n     # set modify values\n-    modify_value= 199\n+    modify_value= 80\n     for x in range(len(img)):\n         for y in range(len(img[x])):\n             #Operation \n             new_R = img[x,y,2] - modify_value \n"
                },
                {
                    "date": 1705544992735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,50 @@\n+import cv2 as cv \n+import numpy as np \n+img = cv.imread(\"images/fruit3.jpg\")\n+image = cv.imshow(\"Image\",img)\n+\n+def darkness():\n+    darkness =np.copy(img)\n+    # set modify values\n+    modify_value= 80\n+    for x in range(len(img)):\n+        for y in range(len(img[x])):\n+            #Operation \n+            new_R = img[x,y,2] - modify_value \n+            new_G = img[x,y,1] - modify_value \n+            new_B = img[x,y,0] - modify_value \n+            # check condition of the intensity which is smaller than 0\n+            if new_B < 0:\n+                new_B = 0\n+            if new_G < 0:\n+                new_G=0\n+            if new_R <0:\n+                new_R=0\n+            #Add new intensity which has modified value\n+            darkness[x,y] = [new_B,new_G,new_R]\n+    cv.imshow(\"Darkness Image\",darkness)\n+    \n+def brightness():\n+    brightness= np.copy(img)\n+    modify_value= 100\n+    for x in range(len(img)):\n+        for y in range(len(img[x])):\n+            #Operation \n+            new_R = modify_value + img[x,y,2]\n+            new_G = modify_value + img[x,y,1]\n+            new_B = modify_value + img[x,y,0]\n+            # check condition of the intensity which is bigger than 255\n+            if new_B > 255:\n+                new_B = 255\n+            if new_G > 255:\n+                new_G = 255\n+            if new_R > 255:\n+                new_R = 255\n+            #Add new intensity which has modified value\n+            brightness[x,y] = [new_B,new_G,new_R]\n+    cv.imshow(\"Brightness Image\",brightness)\n+    \n+image\n+darkness()\n+brightness()\n+cv.waitKey(0)\n"
                },
                {
                    "date": 1705545522652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,100 +1,31 @@\n-import cv2 as cv \n-import numpy as np \n-img = cv.imread(\"images/fruit3.jpg\")\n-image = cv.imshow(\"Image\",img)\n+import cv2 as cv\n \n-def darkness():\n-    darkness =np.copy(img)\n-    # set modify values\n-    modify_value= 80\n-    for x in range(len(img)):\n-        for y in range(len(img[x])):\n-            #Operation \n-            new_R = img[x,y,2] - modify_value \n-            new_G = img[x,y,1] - modify_value \n-            new_B = img[x,y,0] - modify_value \n-            # check condition of the intensity which is smaller than 0\n-            if new_B < 0:\n-                new_B = 0\n-            if new_G < 0:\n-                new_G=0\n-            if new_R <0:\n-                new_R=0\n-            #Add new intensity which has modified value\n-            darkness[x,y] = [new_B,new_G,new_R]\n-    cv.imshow(\"Darkness Image\",darkness)\n-    \n-def brightness():\n-    brightness= np.copy(img)\n-    modify_value= 100\n-    for x in range(len(img)):\n-        for y in range(len(img[x])):\n-            #Operation \n-            new_R = modify_value + img[x,y,2]\n-            new_G = modify_value + img[x,y,1]\n-            new_B = modify_value + img[x,y,0]\n-            # check condition of the intensity which is bigger than 255\n-            if new_B > 255:\n-                new_B = 255\n-            if new_G > 255:\n-                new_G = 255\n-            if new_R > 255:\n-                new_R = 255\n-            #Add new intensity which has modified value\n-            brightness[x,y] = [new_B,new_G,new_R]\n-    cv.imshow(\"Brightness Image\",brightness)\n-    \n-image\n-darkness()\n-brightness()\n-cv.waitKey(0)\n-import cv2 as cv \n-import numpy as np \n img = cv.imread(\"images/fruit3.jpg\")\n-image = cv.imshow(\"Image\",img)\n+cv.imshow(\"Original Image\", img)\n \n-def darkness():\n-    darkness =np.copy(img)\n-    # set modify values\n-    modify_value= 80\n-    for x in range(len(img)):\n-        for y in range(len(img[x])):\n-            #Operation \n-            new_R = img[x,y,2] - modify_value \n-            new_G = img[x,y,1] - modify_value \n-            new_B = img[x,y,0] - modify_value \n-            # check condition of the intensity which is smaller than 0\n-            if new_B < 0:\n-                new_B = 0\n-            if new_G < 0:\n-                new_G=0\n-            if new_R <0:\n-                new_R=0\n-            #Add new intensity which has modified value\n-            darkness[x,y] = [new_B,new_G,new_R]\n-    cv.imshow(\"Darkness Image\",darkness)\n-    \n-def brightness():\n-    brightness= np.copy(img)\n-    modify_value= 100\n-    for x in range(len(img)):\n-        for y in range(len(img[x])):\n-            #Operation \n-            new_R = modify_value + img[x,y,2]\n-            new_G = modify_value + img[x,y,1]\n-            new_B = modify_value + img[x,y,0]\n-            # check condition of the intensity which is bigger than 255\n-            if new_B > 255:\n-                new_B = 255\n-            if new_G > 255:\n-                new_G = 255\n-            if new_R > 255:\n-                new_R = 255\n-            #Add new intensity which has modified value\n-            brightness[x,y] = [new_B,new_G,new_R]\n-    cv.imshow(\"Brightness Image\",brightness)\n-    \n-image\n-darkness()\n-brightness()\n+def adjust_darkness(image, modify_value):\n+    darkness = image.copy()\n+    for x in range(len(image)):\n+        for y in range(len(image[x])):\n+            for c in range(3):  # Loop through color channels\n+                darkness[x, y, c] = max(image[x, y, c] - modify_value, 0)\n+    return darkness\n+\n+def adjust_brightness(image, modify_value):\n+    brightness = image.copy()\n+    for x in range(len(image)):\n+        for y in range(len(image[x])):\n+            for c in range(3):  # Loop through color channels\n+                brightness[x, y, c] = min(image[x, y, c] + modify_value, 255)\n+    return brightness\n+\n+# Apply adjustments\n+darkness_image = adjust_darkness(img, 80)\n+brightness_image = adjust_brightness(img, 100)\n+\n+# Display results\n+cv.imshow(\"Darkness Image\", darkness_image)\n+cv.imshow(\"Brightness Image\", brightness_image)\n+\n cv.waitKey(0)\n+cv.destroyAllWindows()\n"
                },
                {
                    "date": 1705545750034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     darkness = image.copy()\n     for x in range(len(image)):\n         for y in range(len(image[x])):\n             for c in range(3):  # Loop through color channels\n-                darkness[x, y, c] = max(image[x, y, c] - modify_value, 0)\n+                darkness[x, y, c] = max(image[x, y, c] - modify_value, -255)\n     return darkness\n \n def adjust_brightness(image, modify_value):\n     brightness = image.copy()\n"
                },
                {
                    "date": 1705545779399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     darkness = image.copy()\n     for x in range(len(image)):\n         for y in range(len(image[x])):\n             for c in range(3):  # Loop through color channels\n-                darkness[x, y, c] = max(image[x, y, c] - modify_value, -255)\n+                darkness[x, y, c] = max(image[x, y, c] - modify_value, 0)\n     return darkness\n \n def adjust_brightness(image, modify_value):\n     brightness = image.copy()\n"
                },
                {
                    "date": 1705545942707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,50 @@\n-import cv2 as cv\n-\n+import cv2 as cv \n+import numpy as np \n img = cv.imread(\"images/fruit3.jpg\")\n-cv.imshow(\"Original Image\", img)\n+image = cv.imshow(\"Image\",img)\n \n-def adjust_darkness(image, modify_value):\n-    darkness = image.copy()\n-    for x in range(len(image)):\n-        for y in range(len(image[x])):\n-            for c in range(3):  # Loop through color channels\n-                darkness[x, y, c] = max(image[x, y, c] - modify_value, 0)\n-    return darkness\n-\n-def adjust_brightness(image, modify_value):\n-    brightness = image.copy()\n-    for x in range(len(image)):\n-        for y in range(len(image[x])):\n-            for c in range(3):  # Loop through color channels\n-                brightness[x, y, c] = min(image[x, y, c] + modify_value, 255)\n-    return brightness\n-\n-# Apply adjustments\n-darkness_image = adjust_darkness(img, 80)\n-brightness_image = adjust_brightness(img, 100)\n-\n-# Display results\n-cv.imshow(\"Darkness Image\", darkness_image)\n-cv.imshow(\"Brightness Image\", brightness_image)\n-\n+def darkness():\n+    darkness =np.copy(img)\n+    # set modify values\n+    modify_value= 80\n+    for x in range(len(img)):\n+        for y in range(len(img[x])):\n+            #Operation \n+            new_R = img[x,y,2] - modify_value \n+            new_G = img[x,y,1] - modify_value \n+            new_B = img[x,y,0] - modify_value \n+            # check condition of the intensity which is smaller than 0\n+            if new_B < 0:\n+                new_B = 0\n+            if new_G < 0:\n+                new_G=0\n+            if new_R <0:\n+                new_R=0\n+            #Add new intensity which has modified value\n+            darkness[x,y] = [new_B,new_G,new_R]\n+    cv.imshow(\"Darkness Image\",darkness)\n+    \n+def brightness():\n+    brightness= np.copy(img)\n+    modify_value= 100\n+    for x in range(len(img)):\n+        for y in range(len(img[x])):\n+            #Operation \n+            new_R = modify_value + img[x,y,2]\n+            new_G = modify_value + img[x,y,1]\n+            new_B = modify_value + img[x,y,0]\n+            # check condition of the intensity which is bigger than 255\n+            if new_B > 255:\n+                new_B = 255\n+            if new_G > 255:\n+                new_G = 255\n+            if new_R > 255:\n+                new_R = 255\n+            #Add new intensity which has modified value\n+            brightness[x,y] = [new_B,new_G,new_R]\n+    cv.imshow(\"Brightness Image\",brightness)\n+    \n+image\n+darkness()\n+brightness()\n cv.waitKey(0)\n-cv.destroyAllWindows()\n"
                },
                {
                    "date": 1705545958777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,50 @@\n+import cv2 as cv \n+import numpy as np \n+img = cv.imread(\"images/fruit3.jpg\")\n+image = cv.imshow(\"Image\",img)\n+\n+def darkness():\n+    darkness =np.copy(img)\n+    # set modify values\n+    modify_value= 80\n+    for x in range(len(img)):\n+        for y in range(len(img[x])):\n+            #Operation \n+            new_R = img[x,y,2] - modify_value \n+            new_G = img[x,y,1] - modify_value \n+            new_B = img[x,y,0] - modify_value \n+            # check condition of the intensity which is smaller than 0\n+            if new_B < 0:\n+                new_B = 0\n+            if new_G < 0:\n+                new_G=0\n+            if new_R <0:\n+                new_R=0\n+            #Add new intensity which has modified value\n+            darkness[x,y] = [new_B,new_G,new_R]\n+    cv.imshow(\"Darkness Image\",darkness)\n+    \n+def brightness():\n+    brightness= np.copy(img)\n+    modify_value= 100\n+    for x in range(len(img)):\n+        for y in range(len(img[x])):\n+            #Operation \n+            new_R = modify_value + img[x,y,2]\n+            new_G = modify_value + img[x,y,1]\n+            new_B = modify_value + img[x,y,0]\n+            # check condition of the intensity which is bigger than 255\n+            if new_B > 255:\n+                new_B = 255\n+            if new_G > 255:\n+                new_G = 255\n+            if new_R > 255:\n+                new_R = 255\n+            #Add new intensity which has modified value\n+            brightness[x,y] = [new_B,new_G,new_R]\n+    cv.imshow(\"Brightness Image\",brightness)\n+    \n+image\n+darkness()\n+brightness()\n+cv.waitKey(0)\n"
                },
                {
                    "date": 1705545976796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \n def darkness():\n     darkness =np.copy(img)\n     # set modify values\n-    modify_value= 80\n+    modify_value= 20\n     for x in range(len(img)):\n         for y in range(len(img[x])):\n             #Operation \n             new_R = img[x,y,2] - modify_value \n@@ -47,54 +47,4 @@\n image\n darkness()\n brightness()\n cv.waitKey(0)\n-import cv2 as cv \n-import numpy as np \n-img = cv.imread(\"images/fruit3.jpg\")\n-image = cv.imshow(\"Image\",img)\n-\n-def darkness():\n-    darkness =np.copy(img)\n-    # set modify values\n-    modify_value= 80\n-    for x in range(len(img)):\n-        for y in range(len(img[x])):\n-            #Operation \n-            new_R = img[x,y,2] - modify_value \n-            new_G = img[x,y,1] - modify_value \n-            new_B = img[x,y,0] - modify_value \n-            # check condition of the intensity which is smaller than 0\n-            if new_B < 0:\n-                new_B = 0\n-            if new_G < 0:\n-                new_G=0\n-            if new_R <0:\n-                new_R=0\n-            #Add new intensity which has modified value\n-            darkness[x,y] = [new_B,new_G,new_R]\n-    cv.imshow(\"Darkness Image\",darkness)\n-    \n-def brightness():\n-    brightness= np.copy(img)\n-    modify_value= 100\n-    for x in range(len(img)):\n-        for y in range(len(img[x])):\n-            #Operation \n-            new_R = modify_value + img[x,y,2]\n-            new_G = modify_value + img[x,y,1]\n-            new_B = modify_value + img[x,y,0]\n-            # check condition of the intensity which is bigger than 255\n-            if new_B > 255:\n-                new_B = 255\n-            if new_G > 255:\n-                new_G = 255\n-            if new_R > 255:\n-                new_R = 255\n-            #Add new intensity which has modified value\n-            brightness[x,y] = [new_B,new_G,new_R]\n-    cv.imshow(\"Brightness Image\",brightness)\n-    \n-image\n-darkness()\n-brightness()\n-cv.waitKey(0)\n"
                },
                {
                    "date": 1705546879814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,50 @@\n+import cv2 as cv \n+import numpy as np \n+img = cv.imread(\"images/fruit3.jpg\")\n+image = cv.imshow(\"Image\",img)\n+\n+def darkness():\n+    darkness =np.copy(img)\n+    # set modify values\n+    modify_value= 50\n+    for x in range(len(img)):\n+        for y in range(len(img[x])):\n+            #Operation \n+            new_R = img[x,y,2] - modify_value \n+            new_G = img[x,y,1] - modify_value \n+            new_B = img[x,y,0] - modify_value \n+            # check condition of the intensity which is smaller than 0\n+            if new_B < 0:\n+                new_B = 0\n+            if new_G < 0:\n+                new_G=0\n+            if new_R <0:\n+                new_R=0\n+            #Add new intensity which has modified value\n+            darkness[x,y] = [new_B,new_G,new_R]\n+    cv.imshow(\"Darkness Image\",darkness)\n+    \n+def brightness():\n+    brightness= np.copy(img)\n+    modify_value= 200\n+    for x in range(len(img)):\n+        for y in range(len(img[x])):\n+            #Operation \n+            new_R = modify_value + img[x,y,2]\n+            new_G = modify_value + img[x,y,1]\n+            new_B = modify_value + img[x,y,0]\n+            # check condition of the intensity which is bigger than 255\n+            if new_B > 255:\n+                new_B = 255\n+            if new_G > 255:\n+                new_G = 255\n+            if new_R > 255:\n+                new_R = 255\n+            #Add new intensity which has modified value\n+            brightness[x,y] = [new_B,new_G,new_R]\n+    cv.imshow(\"Brightness Image\",brightness)\n+    \n+image\n+darkness()\n+brightness()\n+cv.waitKey(0)\n"
                },
                {
                    "date": 1705547067921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,50 @@\n+import cv2 as cv \n+import numpy as np \n+img = cv.imread(\"images/fruit3.jpg\")\n+image = cv.imshow(\"Image\",img)\n+\n+def darkness():\n+    darkness =np.copy(img)\n+    # set modify values\n+    modify_value= 50\n+    for x in range(len(img)):\n+        for y in range(len(img[x])):\n+            #Operation \n+            new_R = img[x,y,2] - modify_value \n+            new_G = img[x,y,1] - modify_value \n+            new_B = img[x,y,0] - modify_value \n+            # check condition of the intensity which is smaller than 0\n+            if new_B < 0:\n+                new_B = 0\n+            if new_G < 0:\n+                new_G=0\n+            if new_R <0:\n+                new_R=0\n+            #Add new intensity which has modified value\n+            darkness[x,y] = [new_B,new_G,new_R]\n+    cv.imshow(\"Darkness Image\",darkness)\n+    \n+def brightness():\n+    brightness= np.copy(img)\n+    modify_value= 95\n+    for x in range(len(img)):\n+        for y in range(len(img[x])):\n+            #Operation \n+            new_R = modify_value + img[x,y,2]\n+            new_G = modify_value + img[x,y,1]\n+            new_B = modify_value + img[x,y,0]\n+            # check condition of the intensity which is bigger than 255\n+            if new_B > 255:\n+                new_B = 255\n+            if new_G > 255:\n+                new_G = 255\n+            if new_R > 255:\n+                new_R = 255\n+            #Add new intensity which has modified value\n+            brightness[x,y] = [new_B,new_G,new_R]\n+    cv.imshow(\"Brightness Image\",brightness)\n+    \n+image\n+darkness()\n+brightness()\n+cv.waitKey(0)\n"
                },
                {
                    "date": 1705570868338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     cv.imshow(\"Darkness Image\",darkness)\n     \n def brightness():\n     brightness= np.copy(img)\n-    modify_value= 95\n+    modify_value= 90\n     for x in range(len(img)):\n         for y in range(len(img[x])):\n             #Operation \n             new_R = modify_value + img[x,y,2]\n"
                },
                {
                    "date": 1705570885647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,104 +47,4 @@\n image\n darkness()\n brightness()\n cv.waitKey(0)\n-import cv2 as cv \n-import numpy as np \n-img = cv.imread(\"images/fruit3.jpg\")\n-image = cv.imshow(\"Image\",img)\n-\n-def darkness():\n-    darkness =np.copy(img)\n-    # set modify values\n-    modify_value= 50\n-    for x in range(len(img)):\n-        for y in range(len(img[x])):\n-            #Operation \n-            new_R = img[x,y,2] - modify_value \n-            new_G = img[x,y,1] - modify_value \n-            new_B = img[x,y,0] - modify_value \n-            # check condition of the intensity which is smaller than 0\n-            if new_B < 0:\n-                new_B = 0\n-            if new_G < 0:\n-                new_G=0\n-            if new_R <0:\n-                new_R=0\n-            #Add new intensity which has modified value\n-            darkness[x,y] = [new_B,new_G,new_R]\n-    cv.imshow(\"Darkness Image\",darkness)\n-    \n-def brightness():\n-    brightness= np.copy(img)\n-    modify_value= 200\n-    for x in range(len(img)):\n-        for y in range(len(img[x])):\n-            #Operation \n-            new_R = modify_value + img[x,y,2]\n-            new_G = modify_value + img[x,y,1]\n-            new_B = modify_value + img[x,y,0]\n-            # check condition of the intensity which is bigger than 255\n-            if new_B > 255:\n-                new_B = 255\n-            if new_G > 255:\n-                new_G = 255\n-            if new_R > 255:\n-                new_R = 255\n-            #Add new intensity which has modified value\n-            brightness[x,y] = [new_B,new_G,new_R]\n-    cv.imshow(\"Brightness Image\",brightness)\n-    \n-image\n-darkness()\n-brightness()\n-cv.waitKey(0)\n-import cv2 as cv \n-import numpy as np \n-img = cv.imread(\"images/fruit3.jpg\")\n-image = cv.imshow(\"Image\",img)\n-\n-def darkness():\n-    darkness =np.copy(img)\n-    # set modify values\n-    modify_value= 20\n-    for x in range(len(img)):\n-        for y in range(len(img[x])):\n-            #Operation \n-            new_R = img[x,y,2] - modify_value \n-            new_G = img[x,y,1] - modify_value \n-            new_B = img[x,y,0] - modify_value \n-            # check condition of the intensity which is smaller than 0\n-            if new_B < 0:\n-                new_B = 0\n-            if new_G < 0:\n-                new_G=0\n-            if new_R <0:\n-                new_R=0\n-            #Add new intensity which has modified value\n-            darkness[x,y] = [new_B,new_G,new_R]\n-    cv.imshow(\"Darkness Image\",darkness)\n-    \n-def brightness():\n-    brightness= np.copy(img)\n-    modify_value= 100\n-    for x in range(len(img)):\n-        for y in range(len(img[x])):\n-            #Operation \n-            new_R = modify_value + img[x,y,2]\n-            new_G = modify_value + img[x,y,1]\n-            new_B = modify_value + img[x,y,0]\n-            # check condition of the intensity which is bigger than 255\n-            if new_B > 255:\n-                new_B = 255\n-            if new_G > 255:\n-                new_G = 255\n-            if new_R > 255:\n-                new_R = 255\n-            #Add new intensity which has modified value\n-            brightness[x,y] = [new_B,new_G,new_R]\n-    cv.imshow(\"Brightness Image\",brightness)\n-    \n-image\n-darkness()\n-brightness()\n-cv.waitKey(0)\n"
                }
            ],
            "date": 1704295103812,
            "name": "Commit-0",
            "content": "import cv2 as cv \nimport numpy as np \nimg = cv.imread(\"./images/fruit3.jpg\")\nimage = cv.imshow(\"Image\",img)\n\ndef darkness():\n    darkness =np.copy(img)\n    modify_value= 100\n    for x in range(len(img)):\n        for y in range(len(img[x])):\n            #Operation \n            new_R = img[x,y,2] - modify_value \n            new_G = img[x,y,1] - modify_value \n            new_B = img[x,y,0] - modify_value \n            # check condition of the intensity which is smaller than 0\n            if new_B < 0:\n                new_B = 0\n            if new_G < 0:\n                new_G=0\n            if new_R <0:\n                new_R=0\n            #Add new intensity which has modified value\n            darkness[x,y] = [new_B,new_G,new_R]\n    cv.imshow(\"Darkness Image\",darkness)\n    \ndef brightness():\n    brightness= np.copy(img)\n    modify_value= 100\n    for x in range(len(img)):\n        for y in range(len(img[x])):\n            #Operation \n            new_R = modify_value + img[x,y,2]\n            new_G = modify_value + img[x,y,1]\n            new_B = modify_value + img[x,y,0]\n            # check condition of the intensity which is bigger than 255\n            if new_B > 255:\n                new_B = 255\n            if new_G > 255:\n                new_G = 255\n            if new_R > 255:\n                new_R = 255\n            #Add new intensity which has modified value\n            brightness[x,y] = [new_B,new_G,new_R]\n    cv.imshow(\"Brightness Image\",brightness)\n    \nimage\ndarkness()\nbrightness()\ncv.waitKey(0)\n"
        }
    ]
}