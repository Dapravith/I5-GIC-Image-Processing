{
    "sourceFile": "TP1.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 52,
            "patches": [
                {
                    "date": 1702539053362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1702539233577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,15 +7,17 @@\n \n \n for h in range(height) :\n     for w in range(width) :\n-        R = imageFile[h,w,0]\n-        G = imageFile[h,w,1]\n-        B = imageFile[h,w,2]\n+        B = imageFile[h,w,0]\n+        G = imageFile[h,w, 1]\n+        R = imageFile[h,w, 2]\n         \n+        \n+        \n         # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n         \n-        imageFile[h,w] = 0.299*R + 0.587*G + 0.114*B\n+        imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n cv.imshow('GrayScale', imageFile)\n cv.waitKey(0)        \n \n \n"
                },
                {
                    "date": 1702539399911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,14 +7,15 @@\n \n \n for h in range(height) :\n     for w in range(width) :\n-        B = imageFile[h,w,0]\n-        G = imageFile[h,w, 1]\n-        R = imageFile[h,w, 2]\n+        B = imageFile[h,w]\n+        G = imageFile[h,w]\n+        R = imageFile[h,w]\n         \n         \n         \n+        \n         # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n         \n         imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n cv.imshow('GrayScale', imageFile)\n"
                },
                {
                    "date": 1702539449543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,24 @@\n+import cv2 as cv;\n+\n+\n+imageFile = cv.imread('./images/Test1.jpg');\n+\n+height, width = imageFile.shape[:2]\n+\n+\n+for h in range(height) :\n+    for w in range(width) :\n+        B = imageFile[h,w, 0]\n+        G = imageFile[h,w, 0]\n+        R = imageFile[h,w, 0]\n+        \n+        \n+        \n+        \n+        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n+        \n+        imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n+cv.imshow('GrayScale', imageFile)\n+cv.waitKey(0)        \n+\n+\n"
                },
                {
                    "date": 1702539502203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,10 +8,10 @@\n \n for h in range(height) :\n     for w in range(width) :\n         B = imageFile[h,w, 0]\n-        G = imageFile[h,w, 0]\n-        R = imageFile[h,w, 0]\n+        G = imageFile[h,w, 1]\n+        R = imageFile[h,w, 2]\n         \n         \n         \n         \n@@ -21,28 +21,4 @@\n cv.imshow('GrayScale', imageFile)\n cv.waitKey(0)        \n \n \n-import cv2 as cv;\n-\n-\n-imageFile = cv.imread('./images/Test1.jpg');\n-\n-height, width = imageFile.shape[:2]\n-\n-\n-for h in range(height) :\n-    for w in range(width) :\n-        B = imageFile[h,w]\n-        G = imageFile[h,w]\n-        R = imageFile[h,w]\n-        \n-        \n-        \n-        \n-        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n-        \n-        imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n-cv.imshow('GrayScale', imageFile)\n-cv.waitKey(0)        \n-\n-\n"
                },
                {
                    "date": 1702539592898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,19 @@\n+import cv2 as cv;\n+\n+\n+imageFile = cv.imread('./images/Test1.jpg');\n+\n+height, width = imageFile.shape[:2]\n+\n+\n+for h in range(height) :\n+    for w in range(width) :\n+        B = imageFile[h,w, 0]\n+        G = imageFile[h,w, 1]\n+        R = imageFile[h,w, 2]\n+        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n+        imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n+cv.imshow('GrayScale', imageFile)\n+cv.waitKey(0)        \n+\n+\n"
                },
                {
                    "date": 1702539721336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n         G = imageFile[h,w, 1]\n         R = imageFile[h,w, 2]\n         # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n         imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n+cv.imshow('OrignalScale', imageFile)\n cv.imshow('GrayScale', imageFile)\n cv.waitKey(0)        \n \n \n"
                },
                {
                    "date": 1702539811841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,22 @@\n+import cv2 as cv;\n+\n+\n+imageFile = cv.imread('./images/Test1.jpg');\n+\n+height, width = imageFile.shape[0]\n+height, width = imageFile.shape[1]\n+height, width = imageFile.shape[2]\n+\n+\n+for h in range(height) :\n+    for w in range(width) :\n+        B = imageFile[h,w]\n+        G = imageFile[h,w]\n+        R = imageFile[h,w]\n+        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n+        imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n+cv.imshow('OrignalScale', imageFile)\n+cv.imshow('GrayScale', imageFile)\n+cv.waitKey(0)        \n+\n+\n"
                },
                {
                    "date": 1702539845942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,21 @@\n+import cv2 as cv;\n+\n+\n+imageFile = cv.imread('./images/Test1.jpg');\n+\n+height, width = imageFile.shape[:2]\n+\n+\n+\n+for h in range(height) :\n+    for w in range(width) :\n+        B = imageFile[h,w]\n+        G = imageFile[h,w]\n+        R = imageFile[h,w]\n+        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n+        imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n+cv.imshow('OrignalScale', imageFile)\n+cv.imshow('GrayScale', imageFile)\n+cv.waitKey(0)        \n+\n+\n"
                },
                {
                    "date": 1702539935183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,50 +8,8 @@\n \n \n for h in range(height) :\n     for w in range(width) :\n-        B = imageFile[h,w]\n-        G = imageFile[h,w]\n-        R = imageFile[h,w]\n-        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n-        imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n-cv.imshow('OrignalScale', imageFile)\n-cv.imshow('GrayScale', imageFile)\n-cv.waitKey(0)        \n-\n-\n-import cv2 as cv;\n-\n-\n-imageFile = cv.imread('./images/Test1.jpg');\n-\n-height, width = imageFile.shape[0]\n-height, width = imageFile.shape[1]\n-height, width = imageFile.shape[2]\n-\n-\n-for h in range(height) :\n-    for w in range(width) :\n-        B = imageFile[h,w]\n-        G = imageFile[h,w]\n-        R = imageFile[h,w]\n-        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n-        imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n-cv.imshow('OrignalScale', imageFile)\n-cv.imshow('GrayScale', imageFile)\n-cv.waitKey(0)        \n-\n-\n-import cv2 as cv;\n-\n-\n-imageFile = cv.imread('./images/Test1.jpg');\n-\n-height, width = imageFile.shape[:2]\n-\n-\n-for h in range(height) :\n-    for w in range(width) :\n         B = imageFile[h,w, 0]\n         G = imageFile[h,w, 1]\n         R = imageFile[h,w, 2]\n         # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n@@ -60,28 +18,4 @@\n cv.imshow('GrayScale', imageFile)\n cv.waitKey(0)        \n \n \n-import cv2 as cv;\n-\n-\n-imageFile = cv.imread('./images/Test1.jpg');\n-\n-height, width = imageFile.shape[:2]\n-\n-\n-for h in range(height) :\n-    for w in range(width) :\n-        B = imageFile[h,w, 0]\n-        G = imageFile[h,w, 1]\n-        R = imageFile[h,w, 2]\n-        \n-        \n-        \n-        \n-        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n-        \n-        imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n-cv.imshow('GrayScale', imageFile)\n-cv.waitKey(0)        \n-\n-\n"
                },
                {
                    "date": 1702540074028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,22 @@\n+import cv2 as cv;\n+\n+\n+imageFile = cv.imread('./images/Test1.jpg');\n+\n+\n+height, width = imageFile.shape[:2]\n+\n+\n+\n+for h in range(height) :\n+    for w in range(width) :\n+        B = imageFile[h,w, 0]\n+        G = imageFile[h,w, 1]\n+        R = imageFile[h,w, 2]\n+        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n+        new_grayScale = imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n+cv.imshow('OrignalScale', imageFile)\n+cv.imshow('GrayScale', new_grayScale)\n+cv.waitKey(0)        \n+\n+\n"
                },
                {
                    "date": 1702540222673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,22 @@\n+import cv2 as cv;\n+\n+\n+imageFile = cv.imread('./images/Test1.jpg');\n+\n+\n+height, width = imageFile.shape[:2]\n+\n+\n+\n+for h in range(height) :\n+    for w in range(width) :\n+        B = imageFile[h,w, 0]\n+        G = imageFile[h,w, 1]\n+        R = imageFile[h,w, 2]\n+        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n+        new_grayScale = imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n+cv.imshow('OrignalScale', imageFile)\n+cv.imshow('GrayScale', new_grayScale)\n+cv.waitKey(0)        \n+\n+\n"
                },
                {
                    "date": 1702540325342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n \n height, width = imageFile.shape[:2]\n \n \n-\n+print(imageFile.shape)\n for h in range(height) :\n     for w in range(width) :\n         B = imageFile[h,w, 0]\n         G = imageFile[h,w, 1]\n@@ -19,47 +19,4 @@\n cv.imshow('GrayScale', new_grayScale)\n cv.waitKey(0)        \n \n \n-import cv2 as cv;\n-\n-\n-imageFile = cv.imread('./images/Test1.jpg');\n-\n-\n-height, width = imageFile.shape[:2]\n-\n-\n-\n-for h in range(height) :\n-    for w in range(width) :\n-        B = imageFile[h,w, 0]\n-        G = imageFile[h,w, 1]\n-        R = imageFile[h,w, 2]\n-        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n-        new_grayScale = imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n-cv.imshow('OrignalScale', imageFile)\n-cv.imshow('GrayScale', new_grayScale)\n-cv.waitKey(0)        \n-\n-\n-import cv2 as cv;\n-\n-\n-imageFile = cv.imread('./images/Test1.jpg');\n-\n-height, width = imageFile.shape[:2]\n-\n-\n-\n-for h in range(height) :\n-    for w in range(width) :\n-        B = imageFile[h,w, 0]\n-        G = imageFile[h,w, 1]\n-        R = imageFile[h,w, 2]\n-        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n-        imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n-cv.imshow('OrignalScale', imageFile)\n-cv.imshow('GrayScale', imageFile)\n-cv.waitKey(0)        \n-\n-\n"
                },
                {
                    "date": 1702540469830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,23 @@\n+import cv2 as cv;\n+\n+\n+imageFile = cv.imread('./images/Test1.jpg');\n+\n+\n+height, width = imageFile.shape[:2]\n+\n+\n+print(imageFile.shape)\n+for h in range(height) :\n+    for w in range(width) :\n+        B = imageFile[h,w, 0]\n+        G = imageFile[h,w, 1]\n+        R = imageFile[h,w, 2]\n+        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n+       # new_grayScale = imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n+    \n+cv.imshow('OrignalScale', imageFile)\n+#cv.imshow('GrayScale', new_grayScale)\n+cv.waitKey(0)        \n+\n+\n"
                },
                {
                    "date": 1702540503185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,23 @@\n+import cv2 as cv;\n+\n+\n+imageFile = cv.imread('./images/Test1.jpg');\n+\n+\n+height, width = imageFile.shape[:2]\n+\n+\n+print(imageFile.shape)\n+for h in range(height) :\n+    for w in range(width) :\n+        B = imageFile[h,w, 0]\n+        G = imageFile[h,w, 1]\n+        R = imageFile[h,w, 2]\n+        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n+        new_grayScale = imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n+    \n+cv.imshow('OrignalScale', imageFile)\n+cv.imshow('GrayScale', new_grayScale)\n+cv.waitKey(0)        \n+\n+\n"
                },
                {
                    "date": 1702540695843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+import cv2 as cv;\n+\n+\n+imageFile = cv.imread('./images/Test1.jpg');\n+\n+\n+height, width = imageFile.shape[:2]\n+\n+new_grayScale = imageFile.copy()\n+\n+\n+print(imageFile.shape)\n+for h in range(height) :\n+    for w in range(width) :\n+        B = imageFile[h,w, 0]\n+        G = imageFile[h,w, 1]\n+        R = imageFile[h,w, 2]\n+        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n+        intensity = imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n+        \n+        new_grayScale[h,w] = [intensity, intensity, intensity]\n+    \n+cv.imshow('OrignalScale', imageFile)\n+cv.imshow('GrayScale', new_grayScale)\n+cv.waitKey(0)\n+cv.destroyAllWindows()        \n+\n+\n"
                },
                {
                    "date": 1702540848327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,10 @@\n \n imageFile = cv.imread('./images/Test1.jpg');\n \n \n-height, width = imageFile.shape[:2]\n+height = imageFile.shape[0]\n+width = imageFile.shape[1]\n \n new_grayScale = imageFile.copy()\n \n \n@@ -25,72 +26,4 @@\n cv.waitKey(0)\n cv.destroyAllWindows()        \n \n \n-import cv2 as cv;\n-\n-\n-imageFile = cv.imread('./images/Test1.jpg');\n-\n-\n-height, width = imageFile.shape[:2]\n-\n-\n-print(imageFile.shape)\n-for h in range(height) :\n-    for w in range(width) :\n-        B = imageFile[h,w, 0]\n-        G = imageFile[h,w, 1]\n-        R = imageFile[h,w, 2]\n-        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n-        new_grayScale = imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n-    \n-cv.imshow('OrignalScale', imageFile)\n-cv.imshow('GrayScale', new_grayScale)\n-cv.waitKey(0)        \n-\n-\n-import cv2 as cv;\n-\n-\n-imageFile = cv.imread('./images/Test1.jpg');\n-\n-\n-height, width = imageFile.shape[:2]\n-\n-\n-print(imageFile.shape)\n-for h in range(height) :\n-    for w in range(width) :\n-        B = imageFile[h,w, 0]\n-        G = imageFile[h,w, 1]\n-        R = imageFile[h,w, 2]\n-        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n-       # new_grayScale = imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n-    \n-cv.imshow('OrignalScale', imageFile)\n-#cv.imshow('GrayScale', new_grayScale)\n-cv.waitKey(0)        \n-\n-\n-import cv2 as cv;\n-\n-\n-imageFile = cv.imread('./images/Test1.jpg');\n-\n-\n-height, width = imageFile.shape[:2]\n-\n-\n-print(imageFile.shape)\n-for h in range(height) :\n-    for w in range(width) :\n-        B = imageFile[h,w, 0]\n-        G = imageFile[h,w, 1]\n-        R = imageFile[h,w, 2]\n-        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n-        new_grayScale = imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n-cv.imshow('OrignalScale', imageFile)\n-cv.imshow('GrayScale', new_grayScale)\n-cv.waitKey(0)        \n-\n-\n"
                },
                {
                    "date": 1702541273933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,38 @@\n-import cv2 as cv;\n+# import cv2 as cv;\n \n \n-imageFile = cv.imread('./images/Test1.jpg');\n+# imageFile = cv.imread('./images/Test1.jpg');\n \n \n-height = imageFile.shape[0]\n-width = imageFile.shape[1]\n+# height = imageFile.shape[0]\n+# width = imageFile.shape[1]\n \n-new_grayScale = imageFile.copy()\n+# new_grayScale = imageFile.copy()\n \n \n-print(imageFile.shape)\n-for h in range(height) :\n-    for w in range(width) :\n-        B = imageFile[h,w, 0]\n-        G = imageFile[h,w, 1]\n-        R = imageFile[h,w, 2]\n-        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n-        intensity = imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n+# print(imageFile.shape)\n+# for h in range(height) :\n+#     for w in range(width) :\n+#         B = imageFile[h,w, 0]\n+#         G = imageFile[h,w, 1]\n+#         R = imageFile[h,w, 2]\n+#         # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n+#         intensity = imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n         \n-        new_grayScale[h,w] = [intensity, intensity, intensity]\n+#         new_grayScale[h,w] = [intensity, intensity, intensity]\n     \n-cv.imshow('OrignalScale', imageFile)\n-cv.imshow('GrayScale', new_grayScale)\n-cv.waitKey(0)\n-cv.destroyAllWindows()        \n+# cv.imshow('OrignalScale', imageFile)\n+# cv.imshow('GrayScale', new_grayScale)\n+# cv.waitKey(0)\n+# cv.destroyAllWindows()        \n \n-\n+import cv2\n+  \n+image = cv2.imread('C:/Users/N/Desktop/Test.jpg')\n+gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n+  \n+cv2.imshow('Original image',image)\n+cv2.imshow('Gray image', gray)\n+  \n+cv2.waitKey(0)\n+cv2.destroyAllWindows()\n"
                },
                {
                    "date": 1702541305632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,38 @@\n+# import cv2 as cv;\n+\n+\n+# imageFile = cv.imread('./images/Test1.jpg');\n+\n+\n+# height = imageFile.shape[0]\n+# width = imageFile.shape[1]\n+\n+# new_grayScale = imageFile.copy()\n+\n+\n+# print(imageFile.shape)\n+# for h in range(height) :\n+#     for w in range(width) :\n+#         B = imageFile[h,w, 0]\n+#         G = imageFile[h,w, 1]\n+#         R = imageFile[h,w, 2]\n+#         # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n+#         intensity = imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n+        \n+#         new_grayScale[h,w] = [intensity, intensity, intensity]\n+    \n+# cv.imshow('OrignalScale', imageFile)\n+# cv.imshow('GrayScale', new_grayScale)\n+# cv.waitKey(0)\n+# cv.destroyAllWindows()        \n+\n+import cv2\n+  \n+image = cv2.imread('./images/Test1.jpg')\n+gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n+  \n+cv2.imshow('Original image',image)\n+cv2.imshow('Gray image', gray)\n+  \n+cv2.waitKey(0)\n+cv2.destroyAllWindows()\n"
                },
                {
                    "date": 1702541379017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+import cv2\n+\n+image = cv2.imread('./images/Test1.jpg')\n+\n+# Get the height and width of the image\n+height, width = image.shape[:2]\n+\n+# Create an empty grayscale image\n+gray = image.copy()\n+\n+# Loop through each pixel and convert to grayscale\n+for h in range(height):\n+    for w in range(width):\n+        B = image[h, w, 0]\n+        G = image[h, w, 1]\n+        R = image[h, w, 2]\n+\n+        # Use the formula for RGB to Grayscale conversion\n+        new_gray_value = 0.299 * R + 0.587 * G + 0.114 * B\n+\n+        # Update the pixel value in the grayscale image\n+        gray[h, w] = [new_gray_value, new_gray_value, new_gray_value]\n+\n+# Display the original and grayscale images\n+cv2.imshow('Original image', image)\n+cv2.imshow('Gray image (Using Loop)', gray)\n+\n+cv2.waitKey(0)\n+cv2.destroyAllWindows()\n"
                },
                {
                    "date": 1702541432987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+import cv2\n+\n+image = cv2.imread('./images/Test1.jpg')\n+\n+# Get the height and width of the image\n+height, width = image.shape[:2]\n+\n+# Create an empty grayscale image\n+gray = image.copy()\n+\n+# Loop through each pixel and convert to grayscale\n+for h in range(height):\n+    for w in range(width):\n+        B = image[h, w, 0]\n+        G = image[h, w, 1]\n+        R = image[h, w, 2]\n+\n+        # Use the formula for RGB to Grayscale conversion\n+        new_gray_value = 0.299 * R + 0.587 * G + 0.114 * B\n+\n+        # Update the pixel value in the grayscale image\n+        gray[h, w] = [new_gray_value, new_gray_value, new_gray_value]\n+\n+# Display the original and grayscale images\n+cv2.imshow('Original image', image)\n+cv2.imshow('Gray image', gray)\n+\n+cv2.waitKey(0)\n+cv2.destroyAllWindows()\n"
                },
                {
                    "date": 1702541476409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import cv2\n+import cv2 as cv\n \n image = cv2.imread('./images/Test1.jpg')\n \n # Get the height and width of the image\n@@ -21,9 +21,9 @@\n         # Update the pixel value in the grayscale image\n         gray[h, w] = [new_gray_value, new_gray_value, new_gray_value]\n \n # Display the original and grayscale images\n-cv2.imshow('Original image', image)\n-cv2.imshow('Gray image', gray)\n+cv.imshow('Original image', image)\n+cv.imshow('Gray image', gray)\n \n-cv2.waitKey(0)\n-cv2.destroyAllWindows()\n+cv.waitKey(0)\n+cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702541491433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import cv2 as cv\n \n-image = cv2.imread('./images/Test1.jpg')\n+image = cv.imread('./images/Test1.jpg')\n \n # Get the height and width of the image\n height, width = image.shape[:2]\n \n@@ -26,109 +26,4 @@\n cv.imshow('Gray image', gray)\n \n cv.waitKey(0)\n cv.destroyAllWindows()\n-import cv2\n-\n-image = cv2.imread('./images/Test1.jpg')\n-\n-# Get the height and width of the image\n-height, width = image.shape[:2]\n-\n-# Create an empty grayscale image\n-gray = image.copy()\n-\n-# Loop through each pixel and convert to grayscale\n-for h in range(height):\n-    for w in range(width):\n-        B = image[h, w, 0]\n-        G = image[h, w, 1]\n-        R = image[h, w, 2]\n-\n-        # Use the formula for RGB to Grayscale conversion\n-        new_gray_value = 0.299 * R + 0.587 * G + 0.114 * B\n-\n-        # Update the pixel value in the grayscale image\n-        gray[h, w] = [new_gray_value, new_gray_value, new_gray_value]\n-\n-# Display the original and grayscale images\n-cv2.imshow('Original image', image)\n-cv2.imshow('Gray image (Using Loop)', gray)\n-\n-cv2.waitKey(0)\n-cv2.destroyAllWindows()\n-# import cv2 as cv;\n-\n-\n-# imageFile = cv.imread('./images/Test1.jpg');\n-\n-\n-# height = imageFile.shape[0]\n-# width = imageFile.shape[1]\n-\n-# new_grayScale = imageFile.copy()\n-\n-\n-# print(imageFile.shape)\n-# for h in range(height) :\n-#     for w in range(width) :\n-#         B = imageFile[h,w, 0]\n-#         G = imageFile[h,w, 1]\n-#         R = imageFile[h,w, 2]\n-#         # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n-#         intensity = imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n-        \n-#         new_grayScale[h,w] = [intensity, intensity, intensity]\n-    \n-# cv.imshow('OrignalScale', imageFile)\n-# cv.imshow('GrayScale', new_grayScale)\n-# cv.waitKey(0)\n-# cv.destroyAllWindows()        \n-\n-import cv2\n-  \n-image = cv2.imread('./images/Test1.jpg')\n-gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n-  \n-cv2.imshow('Original image',image)\n-cv2.imshow('Gray image', gray)\n-  \n-cv2.waitKey(0)\n-cv2.destroyAllWindows()\n-# import cv2 as cv;\n-\n-\n-# imageFile = cv.imread('./images/Test1.jpg');\n-\n-\n-# height = imageFile.shape[0]\n-# width = imageFile.shape[1]\n-\n-# new_grayScale = imageFile.copy()\n-\n-\n-# print(imageFile.shape)\n-# for h in range(height) :\n-#     for w in range(width) :\n-#         B = imageFile[h,w, 0]\n-#         G = imageFile[h,w, 1]\n-#         R = imageFile[h,w, 2]\n-#         # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n-#         intensity = imageFile[h,w] = 0.114*B + 0.587*G + 0.299*R\n-        \n-#         new_grayScale[h,w] = [intensity, intensity, intensity]\n-    \n-# cv.imshow('OrignalScale', imageFile)\n-# cv.imshow('GrayScale', new_grayScale)\n-# cv.waitKey(0)\n-# cv.destroyAllWindows()        \n-\n-import cv2\n-  \n-image = cv2.imread('C:/Users/N/Desktop/Test.jpg')\n-gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n-  \n-cv2.imshow('Original image',image)\n-cv2.imshow('Gray image', gray)\n-  \n-cv2.waitKey(0)\n-cv2.destroyAllWindows()\n"
                },
                {
                    "date": 1702541564894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n         # Update the pixel value in the grayscale image\n         gray[h, w] = [new_gray_value, new_gray_value, new_gray_value]\n \n # Display the original and grayscale images\n-cv.imshow('Original image', image)\n-cv.imshow('Gray image', gray)\n+cv.imshow('Original image Scale', image)\n+cv.imshow('GrayScale image', gray)\n \n cv.waitKey(0)\n cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702541833941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n # Get the height and width of the image\n height, width = image.shape[:2]\n \n # Create an empty grayscale image\n-gray = image.copy()\n+grayScale = image.copy()\n \n # Loop through each pixel and convert to grayscale\n for h in range(height):\n     for w in range(width):\n@@ -15,15 +15,15 @@\n         G = image[h, w, 1]\n         R = image[h, w, 2]\n \n         # Use the formula for RGB to Grayscale conversion\n-        new_gray_value = 0.299 * R + 0.587 * G + 0.114 * B\n+        Intensity_grayScaleConvertion = 0.299 * R + 0.587 * G + 0.114 * B\n \n         # Update the pixel value in the grayscale image\n-        gray[h, w] = [new_gray_value, new_gray_value, new_gray_value]\n+        grayScale[h, w] = [Intensity_grayScaleConvertion, Intensity_grayScaleConvertion, Intensity_grayScaleConvertion]\n \n # Display the original and grayscale images\n cv.imshow('Original image Scale', image)\n-cv.imshow('GrayScale image', gray)\n+cv.imshow('GrayScale image', grayScale)\n \n cv.waitKey(0)\n cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702542146621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+import cv2 as cv\n+\n+image = cv.imread('./images/Test1.jpg')\n+\n+# Get the height and width of the image\n+height, width = image.shape[:2]\n+\n+# Create an empty grayscale image\n+grayScale = image.copy()\n+\n+# Loop through each pixel and convert to grayscale\n+for h in range(height):\n+    for w in range(width):\n+        B = image[h, w, 0]\n+        G = image[h, w, 1]\n+        R = image[h, w, 2]\n+\n+        # Use the formula for Intensity RGB to Grayscale conversion\n+        Intensity_grayScaleConvertion = 0.299 * R + 0.587 * G + 0.114 * B\n+\n+        # Update the pixel value in the grayscale image\n+        grayScale[h, w] = [Intensity_grayScaleConvertion, Intensity_grayScaleConvertion, Intensity_grayScaleConvertion]\n+\n+# Display the original and grayscale images\n+cv.imshow('Original image Scale', image)\n+cv.imshow('GrayScale image', grayScale)\n+\n+cv.waitKey(0)\n+cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702542479003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,10 @@\n \n image = cv.imread('./images/Test1.jpg')\n \n # Get the height and width of the image\n-height, width = image.shape[:2]\n+height = image.shape[0]\n+width = image.shape[1]\n \n # Create an empty grayscale image\n grayScale = image.copy()\n \n@@ -26,33 +27,4 @@\n cv.imshow('GrayScale image', grayScale)\n \n cv.waitKey(0)\n cv.destroyAllWindows()\n-import cv2 as cv\n-\n-image = cv.imread('./images/Test1.jpg')\n-\n-# Get the height and width of the image\n-height, width = image.shape[:2]\n-\n-# Create an empty grayscale image\n-grayScale = image.copy()\n-\n-# Loop through each pixel and convert to grayscale\n-for h in range(height):\n-    for w in range(width):\n-        B = image[h, w, 0]\n-        G = image[h, w, 1]\n-        R = image[h, w, 2]\n-\n-        # Use the formula for RGB to Grayscale conversion\n-        Intensity_grayScaleConvertion = 0.299 * R + 0.587 * G + 0.114 * B\n-\n-        # Update the pixel value in the grayscale image\n-        grayScale[h, w] = [Intensity_grayScaleConvertion, Intensity_grayScaleConvertion, Intensity_grayScaleConvertion]\n-\n-# Display the original and grayscale images\n-cv.imshow('Original image Scale', image)\n-cv.imshow('GrayScale image', grayScale)\n-\n-cv.waitKey(0)\n-cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702542528938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,38 @@\n+import cv2 as cv\n+\n+def convert_to_grayscale(image):\n+    if len(image.shape) == 3 and image.shape[2] == 3:  # Check if it's a color image (3 channels)\n+        # Get the height and width of the image\n+        height = image.shape[0]\n+        width = image.shape[1]\n+\n+        # Create an empty grayscale image\n+        grayscale_image = [[0] * width for _ in range(height)]\n+\n+        # Loop through each pixel and convert to grayscale\n+        for h in range(height):\n+            for w in range(width):\n+                B = image[h, w, 0]\n+                G = image[h, w, 1]\n+                R = image[h, w, 2]\n+\n+                # Calculate the grayscale value using the luminance formula\n+                grayscale_image[h][w] = int(0.299 * R + 0.587 * G + 0.114 * B)\n+\n+        return grayscale_image\n+    else:\n+        print(\"Input is not a color image.\")\n+        return None\n+\n+# Load a color image\n+image_path = './images/Test1.jpg'\n+color_image = cv.imread(image_path)\n+\n+# Convert to grayscale using the custom function\n+grayscale_image = convert_to_grayscale(color_image)\n+\n+# Display the original color and grayscale images\n+cv.imshow('Original Color Image', color_image)\n+cv.imshow('Grayscale Image', grayscale_image)\n+cv.waitKey(0)\n+cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702542565387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,30 @@\n+import cv2 as cv\n+\n+image = cv.imread('./images/Test1.jpg')\n+\n+# Get the height and width of the image\n+height = image.shape[0]\n+width = image.shape[1]\n+\n+# Create an empty grayscale image\n+grayScale = image.copy()\n+\n+# Loop through each pixel and convert to grayscale\n+for h in range(height):\n+    for w in range(width):\n+        B = image[h, w, 0]\n+        G = image[h, w, 1]\n+        R = image[h, w, 2]\n+\n+        # Use the formula for Intensity RGB to Grayscale conversion\n+        Intensity_grayScaleConvertion = 0.299 * R + 0.587 * G + 0.114 * B\n+\n+        # Update the pixel value in the grayscale image\n+        grayScale[h, w] = [Intensity_grayScaleConvertion, Intensity_grayScaleConvertion, Intensity_grayScaleConvertion]\n+\n+# Display the original and grayscale images\n+cv.imshow('Original image Scale', image)\n+cv.imshow('GrayScale image', grayScale)\n+\n+cv.waitKey(0)\n+cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702543219513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,98 +1,20 @@\n import cv2 as cv\n \n-image = cv.imread('./images/Test1.jpg')\n+img = cv.imread('.img/download.jpeg')\n \n-# Get the height and width of the image\n-height = image.shape[0]\n-width = image.shape[1]\n+height, width = img.shape[:2]\n+# print(height)\n+# print(width)\n \n-# Create an empty grayscale image\n-grayScale = image.copy()\n+for h in range(height) :\n+    for w in range(width)  :\n+        B = img[h,w,0]\n+        G = img[h,w,1]\n+        R = img[h,w,2]\n \n-# Loop through each pixel and convert to grayscale\n-for h in range(height):\n-    for w in range(width):\n-        B = image[h, w, 0]\n-        G = image[h, w, 1]\n-        R = image[h, w, 2]\n+        # img[h,w] = R + G + B\n \n-        # Use the formula for Intensity RGB to Grayscale conversion\n-        Intensity_grayScaleConvertion = 0.299 * R + 0.587 * G + 0.114 * B\n-\n-        # Update the pixel value in the grayscale image\n-        grayScale[h, w] = [Intensity_grayScaleConvertion, Intensity_grayScaleConvertion, Intensity_grayScaleConvertion]\n-\n-# Display the original and grayscale images\n-cv.imshow('Original image Scale', image)\n-cv.imshow('GrayScale image', grayScale)\n-\n-cv.waitKey(0)\n-cv.destroyAllWindows()\n-import cv2 as cv\n-\n-def convert_to_grayscale(image):\n-    if len(image.shape) == 3 and image.shape[2] == 3:  # Check if it's a color image (3 channels)\n-        # Get the height and width of the image\n-        height = image.shape[0]\n-        width = image.shape[1]\n-\n-        # Create an empty grayscale image\n-        grayscale_image = [[0] * width for _ in range(height)]\n-\n-        # Loop through each pixel and convert to grayscale\n-        for h in range(height):\n-            for w in range(width):\n-                B = image[h, w, 0]\n-                G = image[h, w, 1]\n-                R = image[h, w, 2]\n-\n-                # Calculate the grayscale value using the luminance formula\n-                grayscale_image[h][w] = int(0.299 * R + 0.587 * G + 0.114 * B)\n-\n-        return grayscale_image\n-    else:\n-        print(\"Input is not a color image.\")\n-        return None\n-\n-# Load a color image\n-image_path = './images/Test1.jpg'\n-color_image = cv.imread(image_path)\n-\n-# Convert to grayscale using the custom function\n-grayscale_image = convert_to_grayscale(color_image)\n-\n-# Display the original color and grayscale images\n-cv.imshow('Original Color Image', color_image)\n-cv.imshow('Grayscale Image', grayscale_image)\n-cv.waitKey(0)\n-cv.destroyAllWindows()\n-import cv2 as cv\n-\n-image = cv.imread('./images/Test1.jpg')\n-\n-# Get the height and width of the image\n-height = image.shape[0]\n-width = image.shape[1]\n-\n-# Create an empty grayscale image\n-grayScale = image.copy()\n-\n-# Loop through each pixel and convert to grayscale\n-for h in range(height):\n-    for w in range(width):\n-        B = image[h, w, 0]\n-        G = image[h, w, 1]\n-        R = image[h, w, 2]\n-\n-        # Use the formula for Intensity RGB to Grayscale conversion\n-        Intensity_grayScaleConvertion = 0.299 * R + 0.587 * G + 0.114 * B\n-\n-        # Update the pixel value in the grayscale image\n-        grayScale[h, w] = [Intensity_grayScaleConvertion, Intensity_grayScaleConvertion, Intensity_grayScaleConvertion]\n-\n-# Display the original and grayscale images\n-cv.imshow('Original image Scale', image)\n-cv.imshow('GrayScale image', grayScale)\n-\n-cv.waitKey(0)\n-cv.destroyAllWindows()\n+        img[h,w] = 0.299*R + 0.587*G + 0.114*B\n+        \n+cv.imshow('GrayScale',img)\n+cv.waitKey(0)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1702543298817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,30 @@\n import cv2 as cv\n \n-img = cv.imread('.img/download.jpeg')\n+image = cv.imread('./images/Test1.jpg')\n \n-height, width = img.shape[:2]\n-# print(height)\n-# print(width)\n+# Get the height and width of the image\n+height = image.shape[0]\n+width = image.shape[1]\n \n-for h in range(height) :\n-    for w in range(width)  :\n-        B = img[h,w,0]\n-        G = img[h,w,1]\n-        R = img[h,w,2]\n+# Create an empty grayscale image\n+grayScale = image.copy()\n \n\\ No newline at end of file\n-        # img[h,w] = R + G + B\n+# Loop through each pixel and convert to grayscale\n+for h in range(height):\n+    for w in range(width):\n+        B = image[h, w, 0]\n+        G = image[h, w, 1]\n+        R = image[h, w, 2]\n \n-        img[h,w] = 0.299*R + 0.587*G + 0.114*B\n-        \n-cv.imshow('GrayScale',img)\n-cv.waitKey(0)\n+        # Use the formula for Intensity RGB to Grayscale conversion\n+        Intensity_grayScaleConvertion = 0.299 * R + 0.587 * G + 0.114 * B\n+\n+        # Update the pixel value in the grayscale image\n+        grayScale[h, w] = [Intensity_grayScaleConvertion, Intensity_grayScaleConvertion, Intensity_grayScaleConvertion]\n+\n+# Display the original and grayscale images\n+cv.imshow('Original image Scale', image)\n+cv.imshow('GrayScale image', grayScale)\n+\n+cv.waitKey(0)\n+cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702543903827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,11 +11,11 @@\n \n # Loop through each pixel and convert to grayscale\n for h in range(height):\n     for w in range(width):\n-        B = image[h, w, 0]\n+        B = image[h, w, 2]\n         G = image[h, w, 1]\n-        R = image[h, w, 2]\n+        R = image[h, w, 0]\n \n         # Use the formula for Intensity RGB to Grayscale conversion\n         Intensity_grayScaleConvertion = 0.299 * R + 0.587 * G + 0.114 * B\n \n@@ -26,5 +26,5 @@\n cv.imshow('Original image Scale', image)\n cv.imshow('GrayScale image', grayScale)\n \n cv.waitKey(0)\n-cv.destroyAllWindows()\n\\ No newline at end of file\n+cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702544074435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,30 @@\n+import cv2 as cv\n+\n+image = cv.imread('./images/Test1.jpg')\n+\n+# Get the height and width of the image\n+height = image.shape[0]\n+width = image.shape[1]\n+\n+# Create an empty grayscale image\n+grayScale = image.copy()\n+\n+# Loop through each pixel and convert to grayscale\n+for h in range(height):\n+    for w in range(width):\n+        B = image[h, w, 2]\n+        G = image[h, w, 1]\n+        R = image[h, w, 0]\n+\n+        # Use the formula for Intensity RGB to Grayscale conversion\n+        IntensityToGrayScale = 0.299 * R + 0.587 * G + 0.114 * B\n+\n+        # Update the pixel value in the grayscale image\n+        grayScale[h, w] = [IntensityToGrayScale, IntensityToGrayScale, IntensityToGrayScale]\n+\n+# Display the original and grayscale images\n+cv.imshow('Original image', image)\n+cv.imshow('GrayScale image', grayScale)\n+\n+cv.waitKey(0)\n+cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702549332765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,30 +1,35 @@\n import cv2 as cv\n \n-image = cv.imread('./images/Test1.jpg')\n+def ConvertColor2Gray(image):\n+    h, w, c = image.shape\n+    \n+    # Create an empty grayscale image\n+    gray_image = [[[0, 0, 0] for _ in range(w)] for _ in range(h)]\n \n-# Get the height and width of the image\n-height = image.shape[0]\n-width = image.shape[1]\n+    for x in range(h):\n+        for y in range(w):\n+            # Extract individual color channels\n+            b = image[x, y, 0]\n+            g = image[x, y, 1]\n+            r = image[x, y, 2]\n \n-# Create an empty grayscale image\n-grayScale = image.copy()\n+            # Calculate grayscale value using the formula: (0.114*b) + (0.587*g) + (0.299*r)\n+            intensity = int(0.114 * b + 0.587 * g + 0.299 * r)\n \n-# Loop through each pixel and convert to grayscale\n-for h in range(height):\n-    for w in range(width):\n-        B = image[h, w, 2]\n-        G = image[h, w, 1]\n-        R = image[h, w, 0]\n+            # Set intensity as the value for all three channels\n+            gray_image[i][j] = [intensity, intensity, intensity]\n+    \n+    return gray_image\n \n-        # Use the formula for Intensity RGB to Grayscale conversion\n-        IntensityToGrayScale = 0.299 * R + 0.587 * G + 0.114 * B\n+img = cv.imread('./images/Pic1.jpg')\n \n-        # Update the pixel value in the grayscale image\n-        grayScale[h, w] = [IntensityToGrayScale, IntensityToGrayScale, IntensityToGrayScale]\n+# Call the function to convert the image to grayscale\n+gray_image = ConvertColor2Gray(img)\n \n # Display the original and grayscale images\n-cv.imshow('Original image', image)\n-cv.imshow('GrayScale image', grayScale)\n+cv.imshow(\"Grayscale Image\", gray_image)\n+cv.imshow(\"Original Image\", img)\n \n+# Wait for a key event and then close the windows\n cv.waitKey(0)\n cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702549364957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,35 @@\n+import cv2 as cv\n+\n+def ConvertColor2Gray(image):\n+    h, w, c = image.shape\n+    \n+    # Create an empty grayscale image\n+    gray_image = [[[0, 0, 0] for _ in range(w)] for _ in range(h)]\n+\n+    for x in range(h):\n+        for y in range(w):\n+            # Extract individual color channels\n+            b = image[x, y, 0]\n+            g = image[x, y, 1]\n+            r = image[x, y, 2]\n+\n+            # Calculate grayscale value using the formula: (0.114*b) + (0.587*g) + (0.299*r)\n+            intensity = int(0.114 * b + 0.587 * g + 0.299 * r)\n+\n+            # Set intensity as the value for all three channels\n+            gray_image[x][y] = [intensity, intensity, intensity]\n+    \n+    return gray_image\n+\n+img = cv.imread('./images/Pic1.jpg')\n+\n+# Call the function to convert the image to grayscale\n+gray_image = ConvertColor2Gray(img)\n+\n+# Display the original and grayscale images\n+cv.imshow(\"Grayscale Image\", gray_image)\n+cv.imshow(\"Original Image\", img)\n+\n+# Wait for a key event and then close the windows\n+cv.waitKey(0)\n+cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702549674398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,100 +1,36 @@\n import cv2 as cv\n \n-def ConvertColor2Gray(image):\n-    h, w, c = image.shape\n-    \n-    # Create an empty grayscale image\n-    gray_image = [[[0, 0, 0] for _ in range(w)] for _ in range(h)]\n+def ConvertColor2Gray(image, channel=0):\n+    if channel not in {0, 1, 2}:\n+        print(\"Invalid channel value. Please choose 0 (Blue), 1 (Green), or 2 (Red).\")\n+        return None\n \n-    for x in range(h):\n-        for y in range(w):\n-            # Extract individual color channels\n-            b = image[x, y, 0]\n-            g = image[x, y, 1]\n-            r = image[x, y, 2]\n+    def calculate_intensity(pixel):\n+        return int(0.114 * pixel[0] + 0.587 * pixel[1] + 0.299 * pixel[2])\n \n-            # Calculate grayscale value using the formula: (0.114*b) + (0.587*g) + (0.299*r)\n-            intensity = int(0.114 * b + 0.587 * g + 0.299 * r)\n+    h, w, c = image.shape\n \n-            # Set intensity as the value for all three channels\n-            gray_image[x][y] = [intensity, intensity, intensity]\n-    \n-    return gray_image\n-\n-img = cv.imread('./images/Pic1.jpg')\n-\n-# Call the function to convert the image to grayscale\n-gray_image = ConvertColor2Gray(img)\n-\n-# Display the original and grayscale images\n-cv.imshow(\"Grayscale Image\", gray_image)\n-cv.imshow(\"Original Image\", img)\n-\n-# Wait for a key event and then close the windows\n-cv.waitKey(0)\n-cv.destroyAllWindows()\n-import cv2 as cv\n-\n-def ConvertColor2Gray(image):\n-    h, w, c = image.shape\n-    \n     # Create an empty grayscale image\n-    gray_image = [[[0, 0, 0] for _ in range(w)] for _ in range(h)]\n+    grayscale_image = [[[0, 0, 0] for _ in range(w)] for _ in range(h)]\n \n-    for x in range(h):\n-        for y in range(w):\n-            # Extract individual color channels\n-            b = image[x, y, 0]\n-            g = image[x, y, 1]\n-            r = image[x, y, 2]\n+    for i in range(h):\n+        for j in range(w):\n+            # Calculate intensity for the specified color channel\n+            intensity = calculate_intensity([image[i, j, 0], image[i, j, 1], image[i, j, 2]])\n+            # Set intensity as the value for all three channels\n+            grayscale_image[i][j][channel] = intensity\n \n-            # Calculate grayscale value using the formula: (0.114*b) + (0.587*g) + (0.299*r)\n-            intensity = int(0.114 * b + 0.587 * g + 0.299 * r)\n+    return grayscale_image\n \n-            # Set intensity as the value for all three channels\n-            gray_image[i][j] = [intensity, intensity, intensity]\n-    \n-    return gray_image\n+img = cv.imread('color-picker.png')\n \n-img = cv.imread('./images/Pic1.jpg')\n+# Call the function to convert the image to grayscale for a specific color channel\n+gray_image = ConvertColor2Gray(img, channel=1)  # Change the channel value (0 for Blue, 1 for Green, 2 for Red)\n \n-# Call the function to convert the image to grayscale\n-gray_image = ConvertColor2Gray(img)\n-\n # Display the original and grayscale images\n cv.imshow(\"Grayscale Image\", gray_image)\n cv.imshow(\"Original Image\", img)\n \n # Wait for a key event and then close the windows\n cv.waitKey(0)\n cv.destroyAllWindows()\n-import cv2 as cv\n-\n-image = cv.imread('./images/Test1.jpg')\n-\n-# Get the height and width of the image\n-height = image.shape[0]\n-width = image.shape[1]\n-\n-# Create an empty grayscale image\n-grayScale = image.copy()\n-\n-# Loop through each pixel and convert to grayscale\n-for h in range(height):\n-    for w in range(width):\n-        B = image[h, w, 2]\n-        G = image[h, w, 1]\n-        R = image[h, w, 0]\n-\n-        # Use the formula for Intensity RGB to Grayscale conversion\n-        Intensity_grayScaleConvertion = 0.299 * R + 0.587 * G + 0.114 * B\n-\n-        # Update the pixel value in the grayscale image\n-        grayScale[h, w] = [Intensity_grayScaleConvertion, Intensity_grayScaleConvertion, Intensity_grayScaleConvertion]\n-\n-# Display the original and grayscale images\n-cv.imshow('Original image Scale', image)\n-cv.imshow('GrayScale image', grayScale)\n-\n-cv.waitKey(0)\n-cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702549686191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,36 @@\n+import cv2 as cv\n+\n+def ConvertColor2Gray(image, channel=0):\n+    if channel not in {0, 1, 2}:\n+        print(\"Invalid channel value. Please choose 0 (Blue), 1 (Green), or 2 (Red).\")\n+        return None\n+\n+    def calculate_intensity(pixel):\n+        return int(0.114 * pixel[0] + 0.587 * pixel[1] + 0.299 * pixel[2])\n+\n+    h, w, c = image.shape\n+\n+    # Create an empty grayscale image\n+    grayscale_image = [[[0, 0, 0] for _ in range(w)] for _ in range(h)]\n+\n+    for i in range(h):\n+        for j in range(w):\n+            # Calculate intensity for the specified color channel\n+            intensity = calculate_intensity([image[i, j, 0], image[i, j, 1], image[i, j, 2]])\n+            # Set intensity as the value for all three channels\n+            grayscale_image[i][j][channel] = intensity\n+\n+    return grayscale_image\n+\n+img = cv.imread('./images/Pic1.jpg')\n+\n+# Call the function to convert the image to grayscale for a specific color channel\n+gray_image = ConvertColor2Gray(img, channel=1)  # Change the channel value (0 for Blue, 1 for Green, 2 for Red)\n+\n+# Display the original and grayscale images\n+cv.imshow(\"Grayscale Image\", gray_image)\n+cv.imshow(\"Original Image\", img)\n+\n+# Wait for a key event and then close the windows\n+cv.waitKey(0)\n+cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702549828046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,72 +1,30 @@\n import cv2 as cv\n \n-def ConvertColor2Gray(image, channel=0):\n-    if channel not in {0, 1, 2}:\n-        print(\"Invalid channel value. Please choose 0 (Blue), 1 (Green), or 2 (Red).\")\n-        return None\n+image = cv.imread('./images/Test1.jpg')\n \n-    def calculate_intensity(pixel):\n-        return int(0.114 * pixel[0] + 0.587 * pixel[1] + 0.299 * pixel[2])\n+# Get the height and width of the image\n+height = image.shape[0]\n+width = image.shape[1]\n \n-    h, w, c = image.shape\n+# Create an empty grayscale image\n+grayScale = image.copy()\n \n-    # Create an empty grayscale image\n-    grayscale_image = [[[0, 0, 0] for _ in range(w)] for _ in range(h)]\n+# Loop through each pixel and convert to grayscale\n+for h in range(height):\n+    for w in range(width):\n+        R = image[h, w, 2]\n+        G = image[h, w, 1]\n+        B = image[h, w, 0]\n \n-    for i in range(h):\n-        for j in range(w):\n-            # Calculate intensity for the specified color channel\n-            intensity = calculate_intensity([image[i, j, 0], image[i, j, 1], image[i, j, 2]])\n-            # Set intensity as the value for all three channels\n-            grayscale_image[i][j][channel] = intensity\n+        # Use the formula for Intensity RGB to Grayscale conversion\n+        IntensityToGrayScale = 0.299 * R + 0.587 * G + 0.114 * B\n \n-    return grayscale_image\n+        # Update the pixel value in the grayscale image\n+        grayScale[h, w] = [IntensityToGrayScale, IntensityToGrayScale, IntensityToGrayScale]\n \n-img = cv.imread('./images/Pic1.jpg')\n-\n-# Call the function to convert the image to grayscale for a specific color channel\n-gray_image = ConvertColor2Gray(img, channel=1)  # Change the channel value (0 for Blue, 1 for Green, 2 for Red)\n-\n # Display the original and grayscale images\n-cv.imshow(\"Grayscale Image\", gray_image)\n-cv.imshow(\"Original Image\", img)\n+cv.imshow('Original image', image)\n+cv.imshow('GrayScale image', grayScale)\n \n-# Wait for a key event and then close the windows\n cv.waitKey(0)\n cv.destroyAllWindows()\n-import cv2 as cv\n-\n-def ConvertColor2Gray(image, channel=0):\n-    if channel not in {0, 1, 2}:\n-        print(\"Invalid channel value. Please choose 0 (Blue), 1 (Green), or 2 (Red).\")\n-        return None\n-\n-    def calculate_intensity(pixel):\n-        return int(0.114 * pixel[0] + 0.587 * pixel[1] + 0.299 * pixel[2])\n-\n-    h, w, c = image.shape\n-\n-    # Create an empty grayscale image\n-    grayscale_image = [[[0, 0, 0] for _ in range(w)] for _ in range(h)]\n-\n-    for i in range(h):\n-        for j in range(w):\n-            # Calculate intensity for the specified color channel\n-            intensity = calculate_intensity([image[i, j, 0], image[i, j, 1], image[i, j, 2]])\n-            # Set intensity as the value for all three channels\n-            grayscale_image[i][j][channel] = intensity\n-\n-    return grayscale_image\n-\n-img = cv.imread('color-picker.png')\n-\n-# Call the function to convert the image to grayscale for a specific color channel\n-gray_image = ConvertColor2Gray(img, channel=1)  # Change the channel value (0 for Blue, 1 for Green, 2 for Red)\n-\n-# Display the original and grayscale images\n-cv.imshow(\"Grayscale Image\", gray_image)\n-cv.imshow(\"Original Image\", img)\n-\n-# Wait for a key event and then close the windows\n-cv.waitKey(0)\n-cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702549919632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,29 @@\n import cv2 as cv\n \n-image = cv.imread('./images/Test1.jpg')\n+def convert_to_grayscale(image):\n+    height, width = image.shape[:2]\n+    grayscale_image = image.copy()\n \n-# Get the height and width of the image\n-height = image.shape[0]\n-width = image.shape[1]\n+    for h in range(height):\n+        for w in range(width):\n+            R = image[h, w, 2]\n+            G = image[h, w, 1]\n+            B = image[h, w, 0]\n \n-# Create an empty grayscale image\n-grayScale = image.copy()\n+            # Use the formula for Intensity RGB to Grayscale conversion\n+            intensity = 0.299 * R + 0.587 * G + 0.114 * B\n \n-# Loop through each pixel and convert to grayscale\n-for h in range(height):\n-    for w in range(width):\n-        R = image[h, w, 2]\n-        G = image[h, w, 1]\n-        B = image[h, w, 0]\n+            # Update the pixel value in the grayscale image\n+            grayscale_image[h, w] = [intensity, intensity, intensity]\n \n-        # Use the formula for Intensity RGB to Grayscale conversion\n-        IntensityToGrayScale = 0.299 * R + 0.587 * G + 0.114 * B\n+    return grayscale_image\n \n-        # Update the pixel value in the grayscale image\n-        grayScale[h, w] = [IntensityToGrayScale, IntensityToGrayScale, IntensityToGrayScale]\n+image = cv.imread('./images/Test1.jpg')\n \n+# Call the function to convert the image to grayscale\n+grayScale = convert_to_grayscale(image)\n+\n # Display the original and grayscale images\n cv.imshow('Original image', image)\n cv.imshow('GrayScale image', grayScale)\n \n"
                },
                {
                    "date": 1702550113955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,31 @@\n+import cv2 as cv\n+\n+def convert_to_grayscale(FileImage):\n+    height, width = FileImage.shape[:2]\n+    grayscale_image = FileImage.copy()\n+\n+    for h in range(height):\n+        for w in range(width):\n+            R = FileImage[h, w, 2]\n+            G = FileImage[h, w, 1]\n+            B = FileImage[h, w, 0]\n+\n+            # Use the formula for Intensity RGB to Grayscale conversion\n+            intensity = 0.299 * R + 0.587 * G + 0.114 * B\n+\n+            # Update the pixel value in the grayscale image\n+            grayscale_image[h, w] = [intensity, intensity, intensity]\n+\n+    return grayscale_image\n+\n+FileImage = cv.imread('./images/Test1.jpg')\n+\n+# Call the function to convert the image to grayscale\n+New_grayScale = convert_to_grayscale(FileImage)\n+\n+# Display the original and grayscale images\n+cv.imshow('Original image', FileImage)\n+cv.imshow('GrayScale image', New_grayScale)\n+\n+cv.waitKey(0)\n+cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702550211798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,13 +5,13 @@\n     grayscale_image = FileImage.copy()\n \n     for h in range(height):\n         for w in range(width):\n-            R = FileImage[h, w, 2]\n-            G = FileImage[h, w, 1]\n-            B = FileImage[h, w, 0]\n+            R = FileImage[h][w][2]\n+            G = FileImage[h][w][1]\n+            B = FileImage[h][w][0]\n \n-            # Use the formula for Intensity RGB to Grayscale conversion\n+            # Use the formula for Intensity RGB to Grayscale conversion Image\n             intensity = 0.299 * R + 0.587 * G + 0.114 * B\n \n             # Update the pixel value in the grayscale image\n             grayscale_image[h, w] = [intensity, intensity, intensity]\n"
                },
                {
                    "date": 1702550232283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,31 @@\n+import cv2 as cv\n+\n+def convert_to_grayscale(FileImage):\n+    height, width = FileImage.shape[:2]\n+    grayscale_image = FileImage.copy()\n+\n+    for h in range(height):\n+        for w in range(width):\n+            R = FileImage[h][w][2]\n+            G = FileImage[h][w][1]\n+            B = FileImage[h][w][0]\n+\n+            # Use the formula for Intensity RGB to Grayscale conversion Image\n+            intensity = 0.299 * R + 0.587 * G + 0.114 * B\n+\n+            # Update the pixel value in the grayscale image\n+            grayscale_image[h, w] = [intensity, intensity, intensity]\n+\n+    return grayscale_image\n+\n+FileImage = cv.imread('./images/Test1.jpg')\n+\n+# Call the function to convert the image to grayscale\n+New_grayScale = convert_to_grayscale(FileImage)\n+\n+# Display the original and grayscale images\n+cv.imshow('OriginalScale image', FileImage)\n+cv.imshow('GrayScale image', New_grayScale)\n+\n+cv.waitKey(0)\n+cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702550437472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,12 +10,12 @@\n             G = FileImage[h][w][1]\n             B = FileImage[h][w][0]\n \n             # Use the formula for Intensity RGB to Grayscale conversion Image\n-            intensity = 0.299 * R + 0.587 * G + 0.114 * B\n+            intensity_RGB = 0.299 * R + 0.587 * G + 0.114 * B\n \n             # Update the pixel value in the grayscale image\n-            grayscale_image[h, w] = [intensity, intensity, intensity]\n+            grayscale_image[h, w] = [intensity_RGB, intensity_RGB, intensity_RGB]\n \n     return grayscale_image\n \n FileImage = cv.imread('./images/Test1.jpg')\n@@ -28,66 +28,4 @@\n cv.imshow('GrayScale image', New_grayScale)\n \n cv.waitKey(0)\n cv.destroyAllWindows()\n-import cv2 as cv\n-\n-def convert_to_grayscale(FileImage):\n-    height, width = FileImage.shape[:2]\n-    grayscale_image = FileImage.copy()\n-\n-    for h in range(height):\n-        for w in range(width):\n-            R = FileImage[h][w][2]\n-            G = FileImage[h][w][1]\n-            B = FileImage[h][w][0]\n-\n-            # Use the formula for Intensity RGB to Grayscale conversion Image\n-            intensity = 0.299 * R + 0.587 * G + 0.114 * B\n-\n-            # Update the pixel value in the grayscale image\n-            grayscale_image[h, w] = [intensity, intensity, intensity]\n-\n-    return grayscale_image\n-\n-FileImage = cv.imread('./images/Test1.jpg')\n-\n-# Call the function to convert the image to grayscale\n-New_grayScale = convert_to_grayscale(FileImage)\n-\n-# Display the original and grayscale images\n-cv.imshow('Original image', FileImage)\n-cv.imshow('GrayScale image', New_grayScale)\n-\n-cv.waitKey(0)\n-cv.destroyAllWindows()\n-import cv2 as cv\n-\n-def convert_to_grayscale(image):\n-    height, width = image.shape[:2]\n-    grayscale_image = image.copy()\n-\n-    for h in range(height):\n-        for w in range(width):\n-            R = image[h, w, 2]\n-            G = image[h, w, 1]\n-            B = image[h, w, 0]\n-\n-            # Use the formula for Intensity RGB to Grayscale conversion\n-            intensity = 0.299 * R + 0.587 * G + 0.114 * B\n-\n-            # Update the pixel value in the grayscale image\n-            grayscale_image[h, w] = [intensity, intensity, intensity]\n-\n-    return grayscale_image\n-\n-image = cv.imread('./images/Test1.jpg')\n-\n-# Call the function to convert the image to grayscale\n-grayScale = convert_to_grayscale(image)\n-\n-# Display the original and grayscale images\n-cv.imshow('Original image', image)\n-cv.imshow('GrayScale image', grayScale)\n-\n-cv.waitKey(0)\n-cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702550703185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n             grayscale_image[h, w] = [intensity_RGB, intensity_RGB, intensity_RGB]\n \n     return grayscale_image\n \n-FileImage = cv.imread('./images/Test1.jpg')\n+FileImage = cv.imread('./images/fruit1.jpg')\n \n # Call the function to convert the image to grayscale\n New_grayScale = convert_to_grayscale(FileImage)\n \n"
                },
                {
                    "date": 1702550753685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n # Call the function to convert the image to grayscale\n New_grayScale = convert_to_grayscale(FileImage)\n \n # Display the original and grayscale images\n-cv.imshow('OriginalScale image', FileImage)\n-cv.imshow('GrayScale image', New_grayScale)\n+cv.imshow('OriginalScale Image', FileImage)\n+cv.imshow('GrayScale Image', New_grayScale)\n \n cv.waitKey(0)\n cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702550775251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,31 @@\n+import cv2 as cv\n+\n+def convert_to_grayscale(FileImage):\n+    height, width = FileImage.shape[:2]\n+    grayscale_image = FileImage.copy()\n+\n+    for h in range(height):\n+        for w in range(width):\n+            R = FileImage[h][w][2]\n+            G = FileImage[h][w][1]\n+            B = FileImage[h][w][0]\n+\n+            # Apply the formula for Intensity RGB to Grayscale conversion Image\n+            intensity_RGB = 0.299 * R + 0.587 * G + 0.114 * B\n+\n+            # Update the pixel value in the grayscale image\n+            grayscale_image[h, w] = [intensity_RGB, intensity_RGB, intensity_RGB]\n+\n+    return grayscale_image\n+\n+FileImage = cv.imread('./images/fruit1.jpg')\n+\n+# Call the function to convert the image to grayscale\n+New_grayScale = convert_to_grayscale(FileImage)\n+\n+# Display the original and grayscale images\n+cv.imshow('OriginalScale Image', FileImage)\n+cv.imshow('GrayScale Image', New_grayScale)\n+\n+cv.waitKey(0)\n+cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702551037376,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,44 +19,13 @@\n     return grayscale_image\n \n FileImage = cv.imread('./images/fruit1.jpg')\n \n-# Call the function to convert the image to grayscale\n+# Call the function to convert the image to GrayScale\n New_grayScale = convert_to_grayscale(FileImage)\n \n # Display the original and grayscale images\n cv.imshow('OriginalScale Image', FileImage)\n cv.imshow('GrayScale Image', New_grayScale)\n \n cv.waitKey(0)\n cv.destroyAllWindows()\n-import cv2 as cv\n-\n-def convert_to_grayscale(FileImage):\n-    height, width = FileImage.shape[:2]\n-    grayscale_image = FileImage.copy()\n-\n-    for h in range(height):\n-        for w in range(width):\n-            R = FileImage[h][w][2]\n-            G = FileImage[h][w][1]\n-            B = FileImage[h][w][0]\n-\n-            # Use the formula for Intensity RGB to Grayscale conversion Image\n-            intensity_RGB = 0.299 * R + 0.587 * G + 0.114 * B\n-\n-            # Update the pixel value in the grayscale image\n-            grayscale_image[h, w] = [intensity_RGB, intensity_RGB, intensity_RGB]\n-\n-    return grayscale_image\n-\n-FileImage = cv.imread('./images/fruit1.jpg')\n-\n-# Call the function to convert the image to grayscale\n-New_grayScale = convert_to_grayscale(FileImage)\n-\n-# Display the original and grayscale images\n-cv.imshow('OriginalScale Image', FileImage)\n-cv.imshow('GrayScale Image', New_grayScale)\n-\n-cv.waitKey(0)\n-cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702551309213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,31 @@\n+import cv2 as cv\n+\n+def convert_to_grayscale(FileImage):\n+    height, width = FileImage.shape[:2]\n+    grayscale_image = FileImage.copy()\n+\n+    for h in range(height):\n+        for w in range(width):\n+            R = FileImage[h][w][2]\n+            G = FileImage[h][w][1]\n+            B = FileImage[h][w][0]\n+\n+            # Apply the formula for Intensity RGB to Grayscale conversion Image\n+            intensity_RGB = 0.299 * R + 0.587 * G + 0.114 * B\n+\n+            # Update the pixel value in the grayscale image\n+            grayscale_image[h, w] = [intensity_RGB] * 3\n+\n+    return grayscale_image\n+\n+FileImage = cv.imread('./images/fruit1.jpg')\n+\n+# Call the function to convert the image to GrayScale\n+New_grayScale = convert_to_grayscale(FileImage)\n+\n+# Display the original and grayscale images\n+cv.imshow('OriginalScale Image', FileImage)\n+cv.imshow('GrayScale Image', New_grayScale)\n+\n+cv.waitKey(0)\n+cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702551583812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,36 @@\n+import cv2 as cv\n+\n+# Declare function to convert an color image to grayscale\n+def convert_to_grayscale(FileImage):\n+    # Get the height, width value of the image\n+    height, width = FileImage.shape[:2]\n+    # Create a copy of the original image to store the grayscale version\n+    grayscale_image = FileImage.copy()\n+    # Use loop each pixel in the color channel image\n+    for h in range(height):\n+        for w in range(width):\n+            R = FileImage[h][w][2]\n+            G = FileImage[h][w][1]\n+            B = FileImage[h][w][0]\n+\n+            # Apply the formula for Intensity RGB to Grayscale conversion Image\n+            intensity_RGB = 0.299 * R + 0.587 * G + 0.114 * B\n+\n+            # Update the pixel value in the grayscale image\n+            grayscale_image[h, w] = [intensity_RGB] * 3\n+\n+    return grayscale_image\n+\n+# Read the orignal color image\n+FileImage = cv.imread('./images/fruit1.jpg')\n+\n+# Call the function to convert the image to GrayScale\n+New_grayScale = convert_to_grayscale(FileImage)\n+\n+# Display the original and grayscale images\n+cv.imshow('OriginalScale Image', FileImage)\n+cv.imshow('GrayScale Image', New_grayScale)\n+\n+# Wait for the key event then close the windows of image\n+cv.waitKey(0)\n+cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702551653934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n     # Get the height, width value of the image\n     height, width = FileImage.shape[:2]\n     # Create a copy of the original image to store the grayscale version\n     grayscale_image = FileImage.copy()\n-    # Use loop each pixel in the color channel image\n+    # Use for loop condition each pixel in the color channel image\n     for h in range(height):\n         for w in range(width):\n             R = FileImage[h][w][2]\n             G = FileImage[h][w][1]\n@@ -16,9 +16,9 @@\n             # Apply the formula for Intensity RGB to Grayscale conversion Image\n             intensity_RGB = 0.299 * R + 0.587 * G + 0.114 * B\n \n             # Update the pixel value in the grayscale image\n-            grayscale_image[h, w] = [intensity_RGB] * 3\n+            grayscale_image[h][w] = [intensity_RGB] * 3\n \n     return grayscale_image\n \n # Read the orignal color image\n"
                },
                {
                    "date": 1702551659473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,66 +33,4 @@\n \n # Wait for the key event then close the windows of image\n cv.waitKey(0)\n cv.destroyAllWindows()\n-import cv2 as cv\n-\n-def convert_to_grayscale(FileImage):\n-    height, width = FileImage.shape[:2]\n-    grayscale_image = FileImage.copy()\n-\n-    for h in range(height):\n-        for w in range(width):\n-            R = FileImage[h][w][2]\n-            G = FileImage[h][w][1]\n-            B = FileImage[h][w][0]\n-\n-            # Apply the formula for Intensity RGB to Grayscale conversion Image\n-            intensity_RGB = 0.299 * R + 0.587 * G + 0.114 * B\n-\n-            # Update the pixel value in the grayscale image\n-            grayscale_image[h, w] = [intensity_RGB] * 3\n-\n-    return grayscale_image\n-\n-FileImage = cv.imread('./images/fruit1.jpg')\n-\n-# Call the function to convert the image to GrayScale\n-New_grayScale = convert_to_grayscale(FileImage)\n-\n-# Display the original and grayscale images\n-cv.imshow('OriginalScale Image', FileImage)\n-cv.imshow('GrayScale Image', New_grayScale)\n-\n-cv.waitKey(0)\n-cv.destroyAllWindows()\n-import cv2 as cv\n-\n-def convert_to_grayscale(FileImage):\n-    height, width = FileImage.shape[:2]\n-    grayscale_image = FileImage.copy()\n-\n-    for h in range(height):\n-        for w in range(width):\n-            R = FileImage[h][w][2]\n-            G = FileImage[h][w][1]\n-            B = FileImage[h][w][0]\n-\n-            # Apply the formula for Intensity RGB to Grayscale conversion Image\n-            intensity_RGB = 0.299 * R + 0.587 * G + 0.114 * B\n-\n-            # Update the pixel value in the grayscale image\n-            grayscale_image[h, w] = [intensity_RGB, intensity_RGB, intensity_RGB]\n-\n-    return grayscale_image\n-\n-FileImage = cv.imread('./images/fruit1.jpg')\n-\n-# Call the function to convert the image to GrayScale\n-New_grayScale = convert_to_grayscale(FileImage)\n-\n-# Display the original and grayscale images\n-cv.imshow('OriginalScale Image', FileImage)\n-cv.imshow('GrayScale Image', New_grayScale)\n-\n-cv.waitKey(0)\n-cv.destroyAllWindows()\n"
                },
                {
                    "date": 1702551729296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n             R = FileImage[h][w][2]\n             G = FileImage[h][w][1]\n             B = FileImage[h][w][0]\n \n-            # Apply the formula for Intensity RGB to Grayscale conversion Image\n+            # Apply the formula for Intensity RGB equation to Grayscale conversion Image\n             intensity_RGB = 0.299 * R + 0.587 * G + 0.114 * B\n \n             # Update the pixel value in the grayscale image\n             grayscale_image[h][w] = [intensity_RGB] * 3\n"
                },
                {
                    "date": 1702551754691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import cv2 as cv\n \n-# Declare function to convert an color image to grayscale\n+# Function to convert an color image to grayscale\n def convert_to_grayscale(FileImage):\n     # Get the height, width value of the image\n     height, width = FileImage.shape[:2]\n     # Create a copy of the original image to store the grayscale version\n"
                }
            ],
            "date": 1702539053362,
            "name": "Commit-0",
            "content": "import cv2 as cv;\n\n\nimageFile = cv.imread('./images/Test1.jpg');\n\nheight, width = imageFile.shape[:2]\n\n\nfor h in range(height) :\n    for w in range(width) :\n        R = imageFile[h,w,0]\n        G = imageFile[h,w,1]\n        B = imageFile[h,w,2]\n        \n        # Use RGB's Formula RGB = 0.299*R + 0.587*G + 0.114*B\n        \n        imageFile[h,w] = 0.299*R + 0.587*G + 0.114*B\ncv.imshow('GrayScale', imageFile)\ncv.waitKey(0)        \n\n\n"
        }
    ]
}